(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[800],{138:o=>{o.exports='<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">mat-raised-button</span> (<span class="hljs-attr">click</span>)=<span class="hljs-string">&quot;toggleOptionDisabled()&quot;</span>&gt;</span>Toggle Option[1] Disabled<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;disabled&quot;</span>&gt;</span>Disabled checkbox group<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span>\n  [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span>\n  [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>\n  [<span class="hljs-attr">disabled</span>]=<span class="hljs-string">&quot;disabled&quot;</span>\n  [<span class="hljs-attr">showSelectAll</span>]=<span class="hljs-string">&quot;true&quot;</span>\n  <span class="hljs-attr">selectAllLabel</span>=<span class="hljs-string">&quot;Select all foods&quot;</span>\n  (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;onOptionChange($event)&quot;</span>\n&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{ selectedFoods | json }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},2508:o=>{o.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{ selectedFoods | json }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mat-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mat-divider</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;cars&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedCars&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{ selectedCars | json }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},8146:o=>{o.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span>\n  [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;cars&quot;</span>\n  <span class="hljs-attr">bindLabel</span>=<span class="hljs-string">&quot;name&quot;</span>\n  <span class="hljs-attr">bindValue</span>=<span class="hljs-string">&quot;id&quot;</span>\n  [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedCars&quot;</span>\n&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{ selectedCars | json }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},8257:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\nimport {\n  MtxCheckboxGroupModule,\n  MtxCheckboxGroupOption,\n} from '@ng-matero/extensions/checkbox-group';\n\n@Component({\n  selector: 'checkbox-group-basic-example',\n  templateUrl: './app.html',\n  styleUrl: './app.scss',\n  imports: [MtxCheckboxGroupModule, FormsModule, MatDividerModule, JsonPipe],\n})\nexport class App {\n  foods: MtxCheckboxGroupOption[] = [\n    { label: 'Steak', value: 'steak', color: 'primary' },\n    { label: 'Pizza', value: 'pizza', color: 'accent' },\n    { label: 'Tacos', value: 'tacos', color: 'warn' },\n  ];\n  selectedFoods = ['steak', 'pizza', 'tacos'];\n\n  cars = ['Ford', 'Chevrolet', 'Dodge'];\n  selectedCars = ['Dodge'];\n}\n"},9426:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c="mat-divider {\n  margin: 1rem 0;\n}\n"},11645:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MtxCheckboxGroupModule } from '@ng-matero/extensions/checkbox-group';\n\n@Component({\n  selector: 'checkbox-group-compare-with-example',\n  templateUrl: './app.html',\n  styleUrl: './app.scss',\n  imports: [MtxCheckboxGroupModule, FormsModule, MatDividerModule, JsonPipe],\n})\nexport class App {\n  foods = [\n    { label: 'Steak', value: 'steak' },\n    { label: 'Pizza', value: 'pizza' },\n    { label: 'Tacos', value: 'tacos' },\n  ];\n  selectedFoods = [{ label: 'Pizza', value: 'pizza' }];\n  compareWith(a: any, b: any) {\n    return a.value === b.value;\n  }\n\n  cars = [\n    { id: 1, name: 'Ford' },\n    { id: 2, name: 'Chevrolet' },\n    { id: 3, name: 'Dodge' },\n  ];\n  selectedCars = [\n    { id: 2, name: 'Chevrolet' },\n    { id: 3, name: 'Dodge' },\n  ];\n  compareWith2(a: any, b: any) {\n    return a.id === b.id;\n  }\n}\n"},11750:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c='{\n  "steak": "\u725b\u6392",\n  "pizza": "\u62ab\u8428",\n  "tacos": "\u7389\u7c73\u5377"\n}\n'},14342:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c="mat-divider {\n  margin: 1rem 0;\n}\n"},15803:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c='<mtx-checkbox-group\n  [items]="cars"\n  bindLabel="name"\n  bindValue="id"\n  [(ngModel)]="selectedCars"\n></mtx-checkbox-group>\n<p>{{ selectedCars | json }}</p>\n'},16743:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c='<mat-radio-group [(ngModel)]="defaultlang" (change)="translate.use($event.value)">\n  @for (lang of langs; track lang) {\n    <mat-radio-button [value]="lang.value">{{ lang.label }}</mat-radio-button>\n  }\n</mat-radio-group>\n\n<mtx-checkbox-group [items]="foods" [(ngModel)]="selectedFoods"></mtx-checkbox-group>\n<p>{{ selectedFoods | json }}</p>\n'},17002:o=>{o.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},18544:o=>{o.exports='<span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;steak&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Steak&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;pizza&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Pizza&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;tacos&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Tacos&quot;</span>\n<span class="hljs-punctuation">}</span>\n'},18883:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MtxCheckboxGroupModule } from '@ng-matero/extensions/checkbox-group';\n\n@Component({\n  selector: 'checkbox-group-bind-label-bind-value-example',\n  templateUrl: './app.html',\n  styleUrl: './app.scss',\n  imports: [MtxCheckboxGroupModule, FormsModule, JsonPipe],\n})\nexport class App {\n  cars = [\n    { id: 1, name: 'Ford' },\n    { id: 2, name: 'Chevrolet' },\n    { id: 3, name: 'Dodge' },\n  ];\n\n  selectedCars = [3];\n}\n"},19560:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c='{\n  "steak": "Steak",\n  "pizza": "Pizza",\n  "tacos": "Tacos"\n}\n'},22286:o=>{o.exports='<span class="hljs-punctuation">{</span>\n  <span class="hljs-attr">&quot;steak&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u725b\u6392&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;pizza&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u62ab\u8428&quot;</span><span class="hljs-punctuation">,</span>\n  <span class="hljs-attr">&quot;tacos&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\u7389\u7c73\u5377&quot;</span>\n<span class="hljs-punctuation">}</span>\n'},29038:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c="/** No CSS for this example */\n"},30768:o=>{o.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},33349:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MtxCheckboxGroupModule } from '@ng-matero/extensions/checkbox-group';\n\n@Component({\n  selector: 'checkbox-group-select-all-example',\n  templateUrl: './app.html',\n  styleUrl: './app.scss',\n  imports: [MatButtonModule, MatCheckboxModule, FormsModule, MtxCheckboxGroupModule, JsonPipe],\n})\nexport class App {\n  foods = [\n    { label: 'Steak', value: 'steak' },\n    { label: 'Pizza', value: 'pizza', disabled: true },\n    { label: 'Tacos', value: 'tacos' },\n  ];\n\n  selectedFoods = ['tacos'];\n\n  disabled = false;\n\n  onOptionChange(e: any) {\n    console.log(e);\n  }\n\n  toggleOptionDisabled() {\n    this.foods[1].disabled = !this.foods[1].disabled;\n    this.foods = this.foods.filter(_ => true);\n  }\n}\n"},43274:o=>{o.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span>\n  [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span>\n  [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>\n  [<span class="hljs-attr">compareWith</span>]=<span class="hljs-string">&quot;compareWith&quot;</span>\n&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{ selectedFoods | json }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mat-divider</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mat-divider</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span>\n  [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;cars&quot;</span>\n  <span class="hljs-attr">bindLabel</span>=<span class="hljs-string">&quot;name&quot;</span>\n  [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedCars&quot;</span>\n  [<span class="hljs-attr">compareWith</span>]=<span class="hljs-string">&quot;compareWith2&quot;</span>\n&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{ selectedCars | json }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},48255:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c="import { JsonPipe } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatRadioModule } from '@angular/material/radio';\nimport {\n  MtxCheckboxGroupModule,\n  MtxCheckboxGroupOption,\n} from '@ng-matero/extensions/checkbox-group';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'checkbox-group-i18n-example',\n  templateUrl: './app.html',\n  styleUrl: './app.scss',\n  imports: [MatRadioModule, FormsModule, MtxCheckboxGroupModule, JsonPipe],\n})\nexport class App {\n  translate = inject(TranslateService);\n\n  foods: MtxCheckboxGroupOption[] = [\n    {\n      label: this.translate.stream('steak'),\n      value: 'steak',\n    },\n    {\n      label: this.translate.stream('pizza'),\n      value: 'pizza',\n    },\n    {\n      label: this.translate.stream('tacos'),\n      value: 'tacos',\n    },\n  ];\n  selectedFoods = ['steak'];\n\n  langs = [\n    { label: '\u4e2d\u6587\u7b80\u4f53', value: 'zh-CN' },\n    { label: 'English', value: 'en-US' },\n  ];\n  defaultlang = 'zh-CN';\n\n  constructor() {\n    this.translate.addLangs(this.langs.map(item => item.value));\n    this.translate.setDefaultLang(this.defaultlang);\n  }\n}\n"},48800:(o,p,a)=>{"use strict";a.r(p),a.d(p,{CheckboxGroupApi:()=>F,CheckboxGroupOverview:()=>y,TranslateHttpLoaderFactory:()=>A,routes:()=>Y});var c=a(66396),T=a(89085),d=a(5113),C=a(74825),b=a(68018),_=a(65218),D=a(13942),z=a(4840),G=a(9105),h=a(89417),x=a(71997),g=a(82765),M=a(92154),E=a(43025),f=a(17705),s=a(57325),P=a(93962);const S=()=>({standalone:!0});function R(e,u){if(1&e){const n=s.RV6();s.j41(0,"mat-checkbox",2),s.mxI("indeterminateChange",function(l){d.eBV(n);const i=s.XpG();return s.DH7(i.selectAllIndeterminate,l)||(i.selectAllIndeterminate=l),d.Njj(l)}),s.bIt("change",function(l){d.eBV(n);const i=s.XpG();return d.Njj(i._updateMasterCheckboxState(l,-1))}),s.EFF(1),s.k0s()}if(2&e){const n=s.XpG();s.Y8G("checked",n.selectAll),s.R50("indeterminate",n.selectAllIndeterminate),s.Y8G("disabled",n.disabled),s.R7$(),s.SpI(" ",n.selectAllLabel," ")}}function O(e,u){if(1&e){const n=s.RV6();s.j41(0,"mat-checkbox",3),s.mxI("ngModelChange",function(l){const i=d.eBV(n).$implicit;return s.DH7(i.checked,l)||(i.checked=l),d.Njj(l)}),s.bIt("change",function(l){const i=d.eBV(n).$index,r=s.XpG();return d.Njj(r._updateNormalCheckboxState(l,i))}),s.EFF(1),s.nI1(2,"toObservable"),s.nI1(3,"async"),s.k0s()}if(2&e){const n=u.$implicit,t=s.XpG();s.R50("ngModel",n.checked),s.Y8G("ngModelOptions",s.lJ4(15,S))("aria-describedby",n.ariaDescribedby)("aria-label",n.ariaLabel)("aria-labelledby",n.ariaLabelledby)("color",n.color)("disabled",n.disabled||t.disabled)("disableRipple",n.disableRipple)("labelPosition",n.labelPosition)("required",n.required),s.R7$(),s.SpI(" ",s.bMT(3,13,s.bMT(2,11,n[t.bindLabel]))," ")}}class B{constructor(u,n){this.label=u,this.value=n}}let m=(()=>{class e{constructor(){this._changeDetectorRef=(0,d.WQX)(f.gRc),this._focusMonitor=(0,d.WQX)(E.F),this._elementRef=(0,d.WQX)(s.aKT),this._items=[],this._originalItems=[],this.bindLabel="label",this.bindValue="value",this.showSelectAll=!1,this.selectAllLabel="Select All",this.disabled=!1,this.change=new s.bkB,this.selectAll=!1,this.selectAllIndeterminate=!1,this.selectedItems=[],this._onChange=()=>null,this._onTouched=()=>null,this._trackBy=(n,t)=>this.trackBy?this.trackBy(n,t):t}get trackBy(){return this._trackByFn}set trackBy(n){null!=n&&"function"!=typeof n&&console.warn(`trackBy must be a function, but received ${JSON.stringify(n)}.`),this._trackByFn=n}get items(){return this._items}set items(n){this._originalItems=JSON.parse(JSON.stringify(n)),this._items=n.map(t=>t instanceof Object?{...t}:new B(t,t)),this.writeValue(this.selectedItems)}get compareWith(){return this._compareWith}set compareWith(n){if(null!=n&&"function"!=typeof n)throw Error("`compareWith` must be a function.");this._compareWith=n}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0).subscribe(n=>{n||Promise.resolve().then(()=>{this._onTouched(),this._changeDetectorRef.markForCheck()})})}ngOnDestroy(){this._focusMonitor.stopMonitoring(this._elementRef)}_selectValue(n){const t=this.items.find(l=>{try{const i=l[this.bindValue]===n;return this._compareWith?this._compareWith(l,n):i}catch(i){return console.warn(i),!1}});return t&&(t.checked=!0),t}writeValue(n){if(this.items.forEach(t=>t.checked=!1),n){if(!Array.isArray(n))throw Error("Value must be an array.");n.forEach(t=>this._selectValue(t)),this.selectedItems=n}this._checkMasterCheckboxState(),this._changeDetectorRef.markForCheck()}registerOnChange(n){this._onChange=n}registerOnTouched(n){this._onTouched=n}setDisabledState(n){this.disabled=n,this._changeDetectorRef.markForCheck()}_checkMasterCheckboxState(){this.items.filter(n=>n.checked||!n.disabled).every(n=>!n.checked)?(this.selectAll=!1,this.selectAllIndeterminate=!1):this.items.filter(n=>n.checked||!n.disabled).every(n=>n.checked)?(this.selectAll=!0,this.selectAllIndeterminate=!1):this.selectAllIndeterminate=!0}_getSelectedItems(n){this.selectedItems=this.items.filter(t=>t.checked),this.selectedItems=this._compareWith?this._originalItems.filter(t=>this.selectedItems.find(l=>this._compareWith(t,l))):this.selectedItems.map(t=>t[this.bindValue]),this._onChange(this.selectedItems),this.change.emit({model:this.selectedItems,index:n})}_updateNormalCheckboxState(n,t){this._checkMasterCheckboxState(),this._getSelectedItems(t)}_updateMasterCheckboxState(n,t){this.selectAll=!this.selectAll,this.selectAllIndeterminate=!1,this.selectAll?this.items.filter(l=>l.checked||!l.disabled).forEach(l=>l.checked=!0):this.items.filter(l=>l.checked||!l.disabled).forEach(l=>l.checked=!!l.disabled),this._getSelectedItems(t)}static#s=this.\u0275fac=function(t){return new(t||e)};static#a=this.\u0275cmp=s.VBU({type:e,selectors:[["mtx-checkbox-group"]],contentQueries:function(t,l,i){if(1&t&&s.wni(i,g.So,5),2&t){let r;s.mGM(r=s.lsd())&&(l._checkboxes=r)}},hostAttrs:[1,"mtx-checkbox-group"],inputs:{trackBy:"trackBy",items:"items",bindLabel:"bindLabel",bindValue:"bindValue",showSelectAll:[2,"showSelectAll","showSelectAll",f.L39],selectAllLabel:"selectAllLabel",compareWith:"compareWith",disabled:[2,"disabled","disabled",f.L39]},outputs:{change:"change"},exportAs:["mtxCheckboxGroup"],features:[s.Jv_([{provide:h.kq,useExisting:(0,d.Rfq)(()=>e),multi:!0}])],decls:3,vars:1,consts:[[1,"mtx-checkbox-master",3,"checked","indeterminate","disabled"],[1,"mtx-checkbox-normal",3,"ngModel","ngModelOptions","aria-describedby","aria-label","aria-labelledby","color","disabled","disableRipple","labelPosition","required"],[1,"mtx-checkbox-master",3,"indeterminateChange","change","checked","indeterminate","disabled"],[1,"mtx-checkbox-normal",3,"ngModelChange","change","ngModel","ngModelOptions","aria-describedby","aria-label","aria-labelledby","color","disabled","disableRipple","labelPosition","required"]],template:function(t,l){1&t&&(s.nVh(0,R,2,4,"mat-checkbox",0),s.Z7z(1,O,4,16,"mat-checkbox",1,l._trackBy,!0)),2&t&&(s.vxM(l.showSelectAll?0:-1),s.R7$(),s.Dyx(l.items))},dependencies:[h.YN,h.BC,h.YS,h.vS,g.So,P.W,c.Jj],encapsulation:2,changeDetection:0})}return e})(),j=(()=>{class e{static#s=this.\u0275fac=function(t){return new(t||e)};static#a=this.\u0275mod=s.$C({type:e});static#n=this.\u0275inj=d.G2t({imports:[c.MD,h.YN,g.g7,M.L,m,M.L]})}return e})();const I={title:"Basic",component:(()=>{class e{constructor(){this.foods=[{label:"Steak",value:"steak",color:"primary"},{label:"Pizza",value:"pizza",color:"accent"},{label:"Tacos",value:"tacos",color:"warn"}],this.selectedFoods=["steak","pizza","tacos"],this.cars=["Ford","Chevrolet","Dodge"],this.selectedCars=["Dodge"]}static#s=this.\u0275fac=function(t){return new(t||e)};static#a=this.\u0275cmp=s.VBU({type:e,selectors:[["checkbox-group-basic-example"]],decls:9,vars:10,consts:[[3,"ngModelChange","items","ngModel"]],template:function(t,l){1&t&&(s.j41(0,"mtx-checkbox-group",0),s.mxI("ngModelChange",function(r){return s.DH7(l.selectedFoods,r)||(l.selectedFoods=r),r}),s.k0s(),s.j41(1,"p"),s.EFF(2),s.nI1(3,"json"),s.k0s(),s.nrm(4,"mat-divider"),s.j41(5,"mtx-checkbox-group",0),s.mxI("ngModelChange",function(r){return s.DH7(l.selectedCars,r)||(l.selectedCars=r),r}),s.k0s(),s.j41(6,"p"),s.EFF(7),s.nI1(8,"json"),s.k0s()),2&t&&(s.Y8G("items",l.foods),s.R50("ngModel",l.selectedFoods),s.R7$(2),s.JRh(s.bMT(3,6,l.selectedFoods)),s.R7$(3),s.Y8G("items",l.cars),s.R50("ngModel",l.selectedCars),s.R7$(2),s.JRh(s.bMT(8,8,l.selectedCars)))},dependencies:[j,m,h.YN,h.BC,h.vS,x.w,x.q,c.TG],styles:["mat-divider[_ngcontent-%COMP%]{margin:1rem 0}"]})}return e})(),files:[{file:"app.html",content:a(2508),filecontent:a(49829)},{file:"app.ts",content:a(65950),filecontent:a(8257)},{file:"app.scss",content:a(60636),filecontent:a(9426)}]},W={title:"BindLabel & BindValue",component:(()=>{class e{constructor(){this.cars=[{id:1,name:"Ford"},{id:2,name:"Chevrolet"},{id:3,name:"Dodge"}],this.selectedCars=[3]}static#s=this.\u0275fac=function(t){return new(t||e)};static#a=this.\u0275cmp=s.VBU({type:e,selectors:[["checkbox-group-bind-label-bind-value-example"]],decls:4,vars:5,consts:[["bindLabel","name","bindValue","id",3,"ngModelChange","items","ngModel"]],template:function(t,l){1&t&&(s.j41(0,"mtx-checkbox-group",0),s.mxI("ngModelChange",function(r){return s.DH7(l.selectedCars,r)||(l.selectedCars=r),r}),s.k0s(),s.j41(1,"p"),s.EFF(2),s.nI1(3,"json"),s.k0s()),2&t&&(s.Y8G("items",l.cars),s.R50("ngModel",l.selectedCars),s.R7$(2),s.JRh(s.bMT(3,3,l.selectedCars)))},dependencies:[j,m,h.YN,h.BC,h.vS,c.TG],encapsulation:2})}return e})(),files:[{file:"app.html",content:a(8146),filecontent:a(15803)},{file:"app.ts",content:a(51908),filecontent:a(18883)},{file:"app.scss",content:a(79582),filecontent:a(83864)}]},w={title:"CompareWith",component:(()=>{class e{constructor(){this.foods=[{label:"Steak",value:"steak"},{label:"Pizza",value:"pizza"},{label:"Tacos",value:"tacos"}],this.selectedFoods=[{label:"Pizza",value:"pizza"}],this.cars=[{id:1,name:"Ford"},{id:2,name:"Chevrolet"},{id:3,name:"Dodge"}],this.selectedCars=[{id:2,name:"Chevrolet"},{id:3,name:"Dodge"}]}compareWith(n,t){return n.value===t.value}compareWith2(n,t){return n.id===t.id}static#s=this.\u0275fac=function(t){return new(t||e)};static#a=this.\u0275cmp=s.VBU({type:e,selectors:[["checkbox-group-compare-with-example"]],decls:9,vars:12,consts:[[3,"ngModelChange","items","ngModel","compareWith"],["bindLabel","name",3,"ngModelChange","items","ngModel","compareWith"]],template:function(t,l){1&t&&(s.j41(0,"mtx-checkbox-group",0),s.mxI("ngModelChange",function(r){return s.DH7(l.selectedFoods,r)||(l.selectedFoods=r),r}),s.k0s(),s.j41(1,"p"),s.EFF(2),s.nI1(3,"json"),s.k0s(),s.nrm(4,"mat-divider"),s.j41(5,"mtx-checkbox-group",1),s.mxI("ngModelChange",function(r){return s.DH7(l.selectedCars,r)||(l.selectedCars=r),r}),s.k0s(),s.j41(6,"p"),s.EFF(7),s.nI1(8,"json"),s.k0s()),2&t&&(s.Y8G("items",l.foods),s.R50("ngModel",l.selectedFoods),s.Y8G("compareWith",l.compareWith),s.R7$(2),s.JRh(s.bMT(3,8,l.selectedFoods)),s.R7$(3),s.Y8G("items",l.cars),s.R50("ngModel",l.selectedCars),s.Y8G("compareWith",l.compareWith2),s.R7$(2),s.JRh(s.bMT(8,10,l.selectedCars)))},dependencies:[j,m,h.YN,h.BC,h.vS,x.w,x.q,c.TG],styles:["mat-divider[_ngcontent-%COMP%]{margin:1rem 0}"]})}return e})(),files:[{file:"app.html",content:a(43274),filecontent:a(49329)},{file:"app.ts",content:a(78064),filecontent:a(11645)},{file:"app.scss",content:a(75224),filecontent:a(14342)}]};var k=a(21431);function L(e,u){if(1&e&&(s.j41(0,"mat-radio-button",1),s.EFF(1),s.k0s()),2&e){const n=u.$implicit;s.Y8G("value",n.value),s.R7$(),s.JRh(n.label)}}const U={title:"I18n ngx-translate",component:(()=>{class e{constructor(){this.translate=(0,d.WQX)(b.c$),this.foods=[{label:this.translate.stream("steak"),value:"steak"},{label:this.translate.stream("pizza"),value:"pizza"},{label:this.translate.stream("tacos"),value:"tacos"}],this.selectedFoods=["steak"],this.langs=[{label:"\u4e2d\u6587\u7b80\u4f53",value:"zh-CN"},{label:"English",value:"en-US"}],this.defaultlang="zh-CN",this.translate.addLangs(this.langs.map(n=>n.value)),this.translate.setDefaultLang(this.defaultlang)}static#s=this.\u0275fac=function(t){return new(t||e)};static#a=this.\u0275cmp=s.VBU({type:e,selectors:[["checkbox-group-i18n-example"]],decls:7,vars:6,consts:[[3,"ngModelChange","change","ngModel"],[3,"value"],[3,"ngModelChange","items","ngModel"]],template:function(t,l){1&t&&(s.j41(0,"mat-radio-group",0),s.mxI("ngModelChange",function(r){return s.DH7(l.defaultlang,r)||(l.defaultlang=r),r}),s.bIt("change",function(r){return l.translate.use(r.value)}),s.Z7z(1,L,2,2,"mat-radio-button",1,s.fX1),s.k0s(),s.j41(3,"mtx-checkbox-group",2),s.mxI("ngModelChange",function(r){return s.DH7(l.selectedFoods,r)||(l.selectedFoods=r),r}),s.k0s(),s.j41(4,"p"),s.EFF(5),s.nI1(6,"json"),s.k0s()),2&t&&(s.R50("ngModel",l.defaultlang),s.R7$(),s.Dyx(l.langs),s.R7$(2),s.Y8G("items",l.foods),s.R50("ngModel",l.selectedFoods),s.R7$(2),s.JRh(s.bMT(6,4,l.selectedFoods)))},dependencies:[k.Wk,k.VT,k._g,h.YN,h.BC,h.vS,j,m,c.TG],encapsulation:2})}return e})(),files:[{file:"app.html",content:a(51400),filecontent:a(16743)},{file:"app.ts",content:a(90766),filecontent:a(48255)},{file:"app.scss",content:a(17002),filecontent:a(96540)},{file:"assets/zh-CN.json",content:a(22286),filecontent:a(11750)},{file:"assets/en-US.json",content:a(18544),filecontent:a(19560)}]};var v=a(88834);const J={title:"SelectAll",component:(()=>{class e{constructor(){this.foods=[{label:"Steak",value:"steak"},{label:"Pizza",value:"pizza",disabled:!0},{label:"Tacos",value:"tacos"}],this.selectedFoods=["tacos"],this.disabled=!1}onOptionChange(n){console.log(n)}toggleOptionDisabled(){this.foods[1].disabled=!this.foods[1].disabled,this.foods=this.foods.filter(n=>!0)}static#s=this.\u0275fac=function(t){return new(t||e)};static#a=this.\u0275cmp=s.VBU({type:e,selectors:[["checkbox-group-select-all-example"]],decls:9,vars:8,consts:[["mat-raised-button","",3,"click"],[3,"ngModelChange","ngModel"],["selectAllLabel","Select all foods",3,"ngModelChange","change","items","ngModel","disabled","showSelectAll"]],template:function(t,l){1&t&&(s.j41(0,"p")(1,"button",0),s.bIt("click",function(){return l.toggleOptionDisabled()}),s.EFF(2,"Toggle Option[1] Disabled"),s.k0s(),s.j41(3,"mat-checkbox",1),s.mxI("ngModelChange",function(r){return s.DH7(l.disabled,r)||(l.disabled=r),r}),s.EFF(4,"Disabled checkbox group"),s.k0s()(),s.j41(5,"mtx-checkbox-group",2),s.mxI("ngModelChange",function(r){return s.DH7(l.selectedFoods,r)||(l.selectedFoods=r),r}),s.bIt("change",function(r){return l.onOptionChange(r)}),s.k0s(),s.j41(6,"p"),s.EFF(7),s.nI1(8,"json"),s.k0s()),2&t&&(s.R7$(3),s.R50("ngModel",l.disabled),s.R7$(2),s.Y8G("items",l.foods),s.R50("ngModel",l.selectedFoods),s.Y8G("disabled",l.disabled)("showSelectAll",!0),s.R7$(2),s.JRh(s.bMT(8,6,l.selectedFoods)))},dependencies:[v.Hl,v.$z,g.g7,g.So,h.YN,h.BC,h.vS,j,m,c.TG],encapsulation:2})}return e})(),files:[{file:"app.html",content:a(138),filecontent:a(77897)},{file:"app.ts",content:a(72752),filecontent:a(33349)},{file:"app.scss",content:a(30768),filecontent:a(29038)}]};function V(e,u){if(1&e&&s.nrm(0,"doc-heading",0)(1,"example-viewer",1),2&e){const n=u.$implicit;s.Y8G("text",n.title),s.R7$(),s.Y8G("exampleData",n)}}function X(e,u){1&e&&s.Z7z(0,V,2,2,null,null,s.fX1),2&e&&s.Dyx(u.examples)}function N(e,u){1&e&&s.nrm(0,"doc-viewer",0),2&e&&s.Y8G("textContent",u.content.default)}let y=(()=>{class e{constructor(){this.route=(0,d.WQX)(C.nX)}static#s=this.\u0275fac=function(t){return new(t||e)};static#a=this.\u0275cmp=s.VBU({type:e,selectors:[["app-checkbox-group-overview"]],decls:2,vars:3,consts:[[3,"text"],[3,"exampleData"]],template:function(t,l){if(1&t&&(s.nVh(0,X,2,0),s.nI1(1,"async")),2&t){let i;s.vxM((i=s.bMT(1,1,l.route.data))?0:-1,i)}},dependencies:[D.d,G.v,c.Jj],encapsulation:2})}return e})(),F=(()=>{class e{constructor(){this.route=(0,d.WQX)(C.nX)}static#s=this.\u0275fac=function(t){return new(t||e)};static#a=this.\u0275cmp=s.VBU({type:e,selectors:[["app-checkbox-group-api"]],decls:2,vars:3,consts:[[3,"textContent"]],template:function(t,l){if(1&t&&(s.nVh(0,N,1,1,"doc-viewer",0),s.nI1(1,"async")),2&t){let i;s.vxM((i=s.bMT(1,1,l.route.data))?0:-1,i)}},dependencies:[z.T,c.Jj],encapsulation:2})}return e})();function A(e){return new _.s(e,"assets/i18n/checkbox-group/","_json")}const Y=[{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:y,data:{examples:[I,W,w,J,U]},providers:[(0,b.D8)({loader:{provide:b.Wr,useFactory:A,deps:[T.Qq]}})]},{path:"api",component:F,pathMatch:"full",data:{content:a(50796)}},{path:"**",redirectTo:"overview"}]},49329:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c='<mtx-checkbox-group\n  [items]="foods"\n  [(ngModel)]="selectedFoods"\n  [compareWith]="compareWith"\n></mtx-checkbox-group>\n<p>{{ selectedFoods | json }}</p>\n\n<mat-divider></mat-divider>\n\n<mtx-checkbox-group\n  [items]="cars"\n  bindLabel="name"\n  [(ngModel)]="selectedCars"\n  [compareWith]="compareWith2"\n></mtx-checkbox-group>\n<p>{{ selectedCars | json }}</p>\n'},49829:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c='<mtx-checkbox-group [items]="foods" [(ngModel)]="selectedFoods"></mtx-checkbox-group>\n<p>{{ selectedFoods | json }}</p>\n\n<mat-divider></mat-divider>\n\n<mtx-checkbox-group [items]="cars" [(ngModel)]="selectedCars"></mtx-checkbox-group>\n<p>{{ selectedCars | json }}</p>\n'},50796:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c='<h1 id="checkbox-group">Checkbox Group</h1>\n<h2 id="api-reference-for-material-extensions-checkbox-group">API reference for Material Extensions checkbox-group</h2>\n<p><code>import { MtxCheckboxGroupModule } from &apos;@ng-matero/extensions/checkbox-group&apos;;</code></p>\n<h3 id="directives">Directives</h3>\n<h4 id="mtxcheckboxgroup"><code>MtxCheckboxGroup</code></h4>\n<p>Selector: <code>[mtx-checkbox-group]</code></p>\n<p>Exported as: <code>mtxCheckboxGroup</code></p>\n<h5 id="properties">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>items: any[]</code></td>\n<td align="left">Items array.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>trackBy: TrackByFunction&lt;any&gt;</code></td>\n<td align="left">Tracking function that will be used to check the differences in data changes. Used similarly to ngFor trackBy function. Optimize row operations by identifying a row based on its data relative to the function to know if a row should be added/removed/moved. Accepts a function that takes two parameters, index and item.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>bindLabel: string</code></td>\n<td align="left">Object property to use for label. Default is <strong><code>&apos;label&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>bindValue: string</code></td>\n<td align="left">Object property to use for selected model. By default binds to whole object. Default is <strong><code>&apos;value&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>compareWith: (a: any, b: any) =&gt; boolean</code></td>\n<td align="left">A function to compare the option values with the selected values. The first argument is a value from an option. The second is a value from the selection(model). A boolean should be returned.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>showSelectAll: boolean</code></td>\n<td align="left">Whether show select all. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>selectAllLabel: string</code></td>\n<td align="left">The lable of select all. Default is <strong><code>&apos;Select All&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>change: EventEmitter&lt;{  model: MtxCheckboxGroupOption[];  index: number; }&gt;()</code></td>\n<td align="left">Event emitted when the selection changed.</td>\n</tr>\n</tbody></table>\n<h3 id="interfaces">Interfaces</h3>\n<h4 id="mtxcheckboxgroupoption"><code>MtxCheckboxGroupOption</code></h4>\n<pre class="hljs"><span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxCheckboxGroupOption</span> {\n  <span class="hljs-attr">ariaDescribedby</span>?: <span class="hljs-built_in">string</span>;\n  <span class="hljs-attr">ariaLabel</span>?: <span class="hljs-built_in">string</span>;\n  <span class="hljs-attr">ariaLabelledby</span>?: <span class="hljs-built_in">string</span>;\n  <span class="hljs-attr">label</span>?: <span class="hljs-built_in">any</span>;\n  <span class="hljs-attr">value</span>?: <span class="hljs-built_in">any</span>;\n  <span class="hljs-attr">color</span>?: <span class="hljs-built_in">string</span>;\n  <span class="hljs-attr">checked</span>?: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-attr">disabled</span>?: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-attr">disableRipple</span>?: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-attr">indeterminate</span>?: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-attr">labelPosition</span>?: <span class="hljs-string">&apos;before&apos;</span> | <span class="hljs-string">&apos;after&apos;</span>;\n  <span class="hljs-attr">id</span>?: <span class="hljs-built_in">string</span>;\n  <span class="hljs-attr">name</span>?: <span class="hljs-built_in">string</span> | <span class="hljs-literal">null</span>;\n  <span class="hljs-attr">required</span>?: <span class="hljs-built_in">boolean</span>;\n  [<span class="hljs-attr">k</span>: <span class="hljs-built_in">string</span>]: <span class="hljs-built_in">any</span>;\n}\n</pre>\n'},51400:o=>{o.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;defaultlang&quot;</span> (<span class="hljs-attr">change</span>)=<span class="hljs-string">&quot;translate.use($event.value)&quot;</span>&gt;</span>\n  @for (lang of langs; track lang) {\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;lang.value&quot;</span>&gt;</span>{{ lang.label }}<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  }\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-checkbox-group</span> [<span class="hljs-attr">items</span>]=<span class="hljs-string">&quot;foods&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;selectedFoods&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mtx-checkbox-group</span>&gt;</span>\n<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>{{ selectedFoods | json }}<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>\n'},51908:o=>{o.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxCheckboxGroupModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-bind-label-bind-value-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.scss&#x27;</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MtxCheckboxGroupModule</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">App</span> {\n  cars = [\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Ford&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Chevrolet&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Dodge&#x27;</span> },\n  ];\n\n  selectedCars = [<span class="hljs-number">3</span>];\n}\n'},60636:o=>{o.exports='mat-divider {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">1rem</span> <span class="hljs-number">0</span>;\n}\n'},65950:o=>{o.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatDividerModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/divider&#x27;</span>;\n<span class="hljs-keyword">import</span> {\n  <span class="hljs-title class_">MtxCheckboxGroupModule</span>,\n  <span class="hljs-title class_">MtxCheckboxGroupOption</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-basic-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.scss&#x27;</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MtxCheckboxGroupModule</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MatDividerModule</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">App</span> {\n  <span class="hljs-attr">foods</span>: <span class="hljs-title class_">MtxCheckboxGroupOption</span>[] = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Steak&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;steak&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;primary&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Pizza&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;accent&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Tacos&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;tacos&#x27;</span>, <span class="hljs-attr">color</span>: <span class="hljs-string">&#x27;warn&#x27;</span> },\n  ];\n  selectedFoods = [<span class="hljs-string">&#x27;steak&#x27;</span>, <span class="hljs-string">&#x27;pizza&#x27;</span>, <span class="hljs-string">&#x27;tacos&#x27;</span>];\n\n  cars = [<span class="hljs-string">&#x27;Ford&#x27;</span>, <span class="hljs-string">&#x27;Chevrolet&#x27;</span>, <span class="hljs-string">&#x27;Dodge&#x27;</span>];\n  selectedCars = [<span class="hljs-string">&#x27;Dodge&#x27;</span>];\n}\n'},72752:o=>{o.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatButtonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/button&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatCheckboxModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/checkbox&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxCheckboxGroupModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-select-all-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.scss&#x27;</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MatButtonModule</span>, <span class="hljs-title class_">MatCheckboxModule</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MtxCheckboxGroupModule</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">App</span> {\n  foods = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Steak&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;steak&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Pizza&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span>, <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Tacos&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;tacos&#x27;</span> },\n  ];\n\n  selectedFoods = [<span class="hljs-string">&#x27;tacos&#x27;</span>];\n\n  disabled = <span class="hljs-literal">false</span>;\n\n  <span class="hljs-title function_">onOptionChange</span>(<span class="hljs-params"><span class="hljs-attr">e</span>: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e);\n  }\n\n  <span class="hljs-title function_">toggleOptionDisabled</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">foods</span>[<span class="hljs-number">1</span>].<span class="hljs-property">disabled</span> = !<span class="hljs-variable language_">this</span>.<span class="hljs-property">foods</span>[<span class="hljs-number">1</span>].<span class="hljs-property">disabled</span>;\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">foods</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">foods</span>.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">_</span> =&gt;</span> <span class="hljs-literal">true</span>);\n  }\n}\n'},75224:o=>{o.exports='mat-divider {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">1rem</span> <span class="hljs-number">0</span>;\n}\n'},77897:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c='<p>\n  <button mat-raised-button (click)="toggleOptionDisabled()">Toggle Option[1] Disabled</button>\n  <mat-checkbox [(ngModel)]="disabled">Disabled checkbox group</mat-checkbox>\n</p>\n\n<mtx-checkbox-group\n  [items]="foods"\n  [(ngModel)]="selectedFoods"\n  [disabled]="disabled"\n  [showSelectAll]="true"\n  selectAllLabel="Select all foods"\n  (change)="onOptionChange($event)"\n></mtx-checkbox-group>\n<p>{{ selectedFoods | json }}</p>\n'},78064:o=>{o.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatDividerModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/divider&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxCheckboxGroupModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-compare-with-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.scss&#x27;</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MtxCheckboxGroupModule</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MatDividerModule</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">App</span> {\n  foods = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Steak&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;steak&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Pizza&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Tacos&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;tacos&#x27;</span> },\n  ];\n  selectedFoods = [{ <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;Pizza&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span> }];\n  <span class="hljs-title function_">compareWith</span>(<span class="hljs-params"><span class="hljs-attr">a</span>: <span class="hljs-built_in">any</span>, <span class="hljs-attr">b</span>: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-keyword">return</span> a.<span class="hljs-property">value</span> === b.<span class="hljs-property">value</span>;\n  }\n\n  cars = [\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Ford&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Chevrolet&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Dodge&#x27;</span> },\n  ];\n  selectedCars = [\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">2</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Chevrolet&#x27;</span> },\n    { <span class="hljs-attr">id</span>: <span class="hljs-number">3</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;Dodge&#x27;</span> },\n  ];\n  <span class="hljs-title function_">compareWith2</span>(<span class="hljs-params"><span class="hljs-attr">a</span>: <span class="hljs-built_in">any</span>, <span class="hljs-attr">b</span>: <span class="hljs-built_in">any</span></span>) {\n    <span class="hljs-keyword">return</span> a.<span class="hljs-property">id</span> === b.<span class="hljs-property">id</span>;\n  }\n}\n'},79582:o=>{o.exports='<span class="hljs-comment">/** No CSS for this example */</span>\n'},83864:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c="/** No CSS for this example */\n"},90766:o=>{o.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">JsonPipe</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/common&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span>, inject } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatRadioModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/radio&#x27;</span>;\n<span class="hljs-keyword">import</span> {\n  <span class="hljs-title class_">MtxCheckboxGroupModule</span>,\n  <span class="hljs-title class_">MtxCheckboxGroupOption</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/checkbox-group&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">TranslateService</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ngx-translate/core&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;checkbox-group-i18n-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.scss&#x27;</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MatRadioModule</span>, <span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MtxCheckboxGroupModule</span>, <span class="hljs-title class_">JsonPipe</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">App</span> {\n  translate = <span class="hljs-title function_">inject</span>(<span class="hljs-title class_">TranslateService</span>);\n\n  <span class="hljs-attr">foods</span>: <span class="hljs-title class_">MtxCheckboxGroupOption</span>[] = [\n    {\n      <span class="hljs-attr">label</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;steak&#x27;</span>),\n      <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;steak&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">label</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;pizza&#x27;</span>),\n      <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;pizza&#x27;</span>,\n    },\n    {\n      <span class="hljs-attr">label</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">stream</span>(<span class="hljs-string">&#x27;tacos&#x27;</span>),\n      <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;tacos&#x27;</span>,\n    },\n  ];\n  selectedFoods = [<span class="hljs-string">&#x27;steak&#x27;</span>];\n\n  langs = [\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;\u4e2d\u6587\u7b80\u4f53&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;zh-CN&#x27;</span> },\n    { <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;English&#x27;</span>, <span class="hljs-attr">value</span>: <span class="hljs-string">&#x27;en-US&#x27;</span> },\n  ];\n  defaultlang = <span class="hljs-string">&#x27;zh-CN&#x27;</span>;\n\n  <span class="hljs-title function_">constructor</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">addLangs</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">langs</span>.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> item.<span class="hljs-property">value</span>));\n    <span class="hljs-variable language_">this</span>.<span class="hljs-property">translate</span>.<span class="hljs-title function_">setDefaultLang</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">defaultlang</span>);\n  }\n}\n'},96540:(o,p,a)=>{"use strict";a.r(p),a.d(p,{default:()=>c});const c="/** No CSS for this example */\n"}}]);