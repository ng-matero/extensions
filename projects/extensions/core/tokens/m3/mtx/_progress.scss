@use 'sass:map';
@use '@angular/material' as mat;
@use '../../token-definition';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mtx, progress);

/// Generates custom tokens for the mat-badge.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @param {Map} $token-slots Possible token slots
/// @return {Map} A set of custom tokens for the mat-badge
@function get-tokens($systems, $exclude-hardcoded, $token-slots) {
  $tokens: (
    container-shape: map.get($systems, md-sys-shape, corner-extra-small),

    track-color: map.get($systems, md-sys-color, surface-container),
    indicator-color: map.get($systems, md-sys-color, outline-variant),
    text-color: map.get($systems, md-sys-color, on-surface),
    info-indicator-color: map.get(mat.$blue-palette, 50),
    info-text-color:token-definition.hardcode(white, $exclude-hardcoded),
    success-indicator-color: map.get(mat.$green-palette, 50),
    success-text-color:token-definition.hardcode(white, $exclude-hardcoded),
    warning-indicator-color: map.get(mat.$orange-palette, 50),
    warning-text-color:token-definition.hardcode(white, $exclude-hardcoded),
    danger-indicator-color: map.get(mat.$red-palette, 50),
    danger-text-color:token-definition.hardcode(white, $exclude-hardcoded),
  );

  @return token-definition.namespace-tokens($prefix, $tokens, $token-slots);
}
