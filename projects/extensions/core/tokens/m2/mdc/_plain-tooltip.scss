@use 'sass:map';
@use '../../../theming/theming';
@use '../../../typography/typography-utils';
@use '../../../mdc-helpers/mdc-helpers';
@use '../../../style/sass-utils';
@use '../../token-utils';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mdc, plain-tooltip);

// Tokens that can't be configured through Angular Material's current theming API,
// but may be in a future version of the theming API.
//
// Tokens that are available in MDC, but not used in Angular Material should be mapped to `null`.
// `null` indicates that we are intentionally choosing not to emit a slot or value for the token in
// our CSS.
@function get-unthemable-tokens() {
  @return ( // Border radius for the tooltip container.
    container-shape: 4px,
    // Line height of the tooltip text.
    supporting-text-line-height: 16px,
    // MDC does not seem to use these token.
    supporting-text-type: null,
  );
}

// Tokens that can be configured through Angular Material's color theming API.
@function get-color-tokens($config) {
  $background: map.get($config, background);

  @return ( // Color of the tooltip container.
    container-color: theming.get-color-from-palette($background, tooltip),
    // Color of the tooltip text.
    supporting-text-color: #fff,
  );
}

// Tokens that can be configured through Angular Material's typography theming API.
@function get-typography-tokens($config) {

  // TODO(amysorto): The earlier implementation of the tooltip used MDC's APIs to create the
  // typography tokens. As a result, we unintentionally allowed `null` typography configs to be
  // passed in. Since there a lot of apps that now depend on this pattern, we need this temporary
  // fallback.
  @if ($config ==null) {
    $config: mdc-helpers.private-fallback-typography-from-mdc();
  }

  @return ( // Font for the tooltip text.
    supporting-text-font: typography-utils.font-family($config, caption) or typography-utils.font-family($config),
    // Font size for the tooltip text.
    supporting-text-size: typography-utils.font-size($config, caption),
    // Font weight of the tooltip text.
    supporting-text-weight: typography-utils.font-weight($config, caption),
    // Tracking (space between letters) of the tooltip text.
    supporting-text-tracking: typography-utils.letter-spacing($config, caption),
  );
}

// Tokens that can be configured through Angular Material's density theming API.
@function get-density-tokens($config) {
  @return ();
}

// Combines the tokens generated by the above functions into a single map with placeholder values.
// This is used to create token slots.
@function get-token-slots() {
  @return sass-utils.deep-merge-all(get-unthemable-tokens(),
    get-color-tokens(token-utils.$placeholder-color-config),
    get-typography-tokens(token-utils.$placeholder-typography-config),
    get-density-tokens(token-utils.$placeholder-density-config));
}
