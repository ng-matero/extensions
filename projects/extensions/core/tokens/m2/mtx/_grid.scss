@use 'sass:map';
@use '../../token-utils';
@use '../../../theming/theming';
@use '../../../style/sass-utils';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mtx, grid);

// Tokens that can't be configured through Angular Material's current theming API,
// but may be in a future version of the theming API.
@function get-unthemable-tokens() {
  @return ();
}

// Tokens that can be configured through Angular Material's color theming API.
@function get-color-tokens($config) {
  $is-dark-theme: map.get($config, is-dark);
  $accent: map.get($config, accent);
  $foreground: map.get($config, foreground);
  $background: map.get($config, background);

  @return (
    outline-color: theming.get-color-from-palette($foreground, secondary-text, .2),
    column-menu-text-color: theming.get-color-from-palette($foreground, text),
    column-menu-divider-color: theming.get-color-from-palette($foreground, divider),
    table-footer-background-color: theming.get-color-from-palette($background, app-bar),
    table-row-striped-background-color: if($is-dark-theme, #3a3a3a, #f5f5f5),
    table-row-hover-background-color: if($is-dark-theme, #2a2a2a, #e5e5e5),
    table-row-selected-background-color: if($is-dark-theme, #2a2a2a, #e5e5e5),
    table-cell-selected-outline-color: theming.get-color-from-palette($accent),
  );
}

// Tokens that can be configured through Angular Material's typography theming API.
@function get-typography-tokens($config) {
  @return ();
}

// Tokens that can be configured through Angular Material's density theming API.
@function get-density-tokens($config) {
  @return ();
}

// Combines the tokens generated by the above functions into a single map with placeholder values.
// This is used to create token slots.
@function get-token-slots() {
  @return sass-utils.deep-merge-all(
    get-unthemable-tokens(),
    get-color-tokens(token-utils.$placeholder-color-config),
    get-typography-tokens(token-utils.$placeholder-typography-config),
    get-density-tokens(token-utils.$placeholder-density-config)
  );
}
