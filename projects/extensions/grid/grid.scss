@use '../core/tokens/token-utils';
@use './m3-grid';

$fallbacks: m3-grid.get-tokens();

.mtx-grid {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%;
  overflow: hidden;
  border: 1px solid token-utils.slot(grid-outline-color, $fallbacks);
  border-radius: token-utils.slot(grid-container-shape, $fallbacks);

  .mat-mdc-table {
    --mat-table-row-item-outline-color: #{token-utils.slot(grid-outline-color, $fallbacks)};

    &.mat-table-striped .mat-row-odd {
      background-color: token-utils.slot(grid-table-row-striped-background-color, $fallbacks);
    }

    &.mat-table-hover {
      .mat-mdc-row:hover {
        background-color: token-utils.slot(grid-table-row-hover-background-color, $fallbacks);
      }

      .mat-mdc-row.selected:hover {
        background-color: token-utils.slot(grid-table-row-selected-hover-background-color, $fallbacks);
      }
    }

    .mat-mdc-row.selected {
      background-color: token-utils.slot(grid-table-row-selected-background-color, $fallbacks);
    }

    .mat-mdc-cell.selected {
      box-shadow: inset 0 0 0 1px token-utils.slot(grid-table-cell-selected-outline-color, $fallbacks);
    }
  }

  .mat-table-container {
    overflow: auto;

    &.mat-table-with-data {
      flex: 1;
    }
  }

  .mat-mdc-table:not(.mat-column-resize-table) {
    min-width: 100%;
    border-collapse: separate;

    .mat-mdc-header-cell,
    .mat-mdc-footer-cell,
    .mat-mdc-cell {
      &:not(.mtx-grid-checkbox-cell) {
        min-width: token-utils.slot(grid-table-cell-min-width, $fallbacks);
      }
    }
  }

  .mat-table-sticky-left {
    border-right: 1px solid var(--mat-table-row-item-outline-color);

    [dir='rtl'] & {
      border-right-width: 0;
      border-left: 1px solid var(--mat-table-row-item-outline-color);
    }
  }

  .mat-table-sticky-right {
    border-left: 1px solid var(--mat-table-row-item-outline-color);

    [dir='rtl'] & {
      border-left-width: 0;
      border-right: 1px solid var(--mat-table-row-item-outline-color);
    }
  }

  .mat-mdc-footer-cell {
    border-top: 1px solid var(--mat-table-row-item-outline-color);
    background-color: token-utils.slot(grid-table-footer-background-color, $fallbacks);
  }

  .mat-mdc-row.mtx-grid-expansion {
    height: 0;
    overflow: hidden;

    .mat-mdc-cell {
      padding-top: 0;
      padding-bottom: 0;
    }

    &.collapsed .mat-mdc-cell {
      border-bottom-width: 0;
    }
  }

  .mat-sort-header-icon {
    margin-left: 4px;

    [dir='rtl'] & {
      margin-left: 0;
      margin-right: 4px;
    }
  }

  .mat-header-cell-inner {
    display: inline-flex;
    align-items: center;
    vertical-align: middle;
  }

  .mat-mdc-paginator {
    border-top: 1px solid token-utils.slot(grid-outline-color, $fallbacks);
    border-bottom-left-radius: token-utils.slot(grid-container-shape, $fallbacks);
    border-bottom-right-radius: token-utils.slot(grid-container-shape, $fallbacks);
  }

  .mat-paginator-hidden {
    display: none;
  }

  .mtx-grid-checkbox-cell {
    width: 60px;
    min-width: 60px;
    padding: 0 calc((60px - var(--mat-checkbox-state-layer-size, 40px)) / 2);
  }
}

.mtx-grid-progress {
  position: absolute;
  top: 0;
  z-index: 120;
  width: 100%;
}

.mtx-grid-toolbar {
  display: flex;
  justify-content: space-between;
  align-items: center;
  min-height: var(--mat-table-header-container-height, 56px);
  padding: 8px;
  box-sizing: border-box;
  border-bottom: 1px solid token-utils.slot(grid-outline-color, $fallbacks);
}

.mtx-grid-toolbar-content {
  flex: 1;
  width: 0;
  padding: 0 8px;
}

.mtx-grid-layout {
  display: flex;
  flex: 1 1 auto;
  overflow: auto;
}

.mtx-grid-content {
  flex-direction: column;
  width: 0;
}

.mtx-grid-sidebar {
  max-width: 50%;
  border-left: 1px solid token-utils.slot(grid-outline-color, $fallbacks);

  [dir='rtl'] & {
    border-left-width: 0;
    border-right: 1px solid token-utils.slot(grid-outline-color, $fallbacks);
  }
}

.mtx-grid-footer {
  position: relative;
  z-index: 1;
}

.mtx-grid-statusbar {
  display: flex;
  align-items: center;
  min-height: var(--mat-table-header-container-height, 56px);
  padding: 8px;
  box-sizing: border-box;
  border-top: 1px solid token-utils.slot(grid-outline-color, $fallbacks);
}

.mtx-grid-no-result {
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 1;
  min-height: 150px;
}

.mtx-grid-expansion-placeholder {
  display: inline-block;
  vertical-align: middle;
  width: var(
    --mat-icon-button-state-layer-size,
    token-utils.slot(grid-row-expand-button-size, $fallbacks)
  );
  height: var(
    --mat-icon-button-state-layer-size,
    token-utils.slot(grid-row-expand-button-size, $fallbacks)
  );
}

.mtx-grid-expansion-detail-wrapper {
  display: grid;
  grid-template-rows: 0fr;
  grid-template-columns: 100%;
  padding: 0;
  overflow: hidden;

  .mtx-grid-expansion.expanded & {
    grid-template-rows: 1fr;
    padding: calc((var(--mat-table-row-item-container-height, 52px) - 20px) / 2) 0;
  }
}

.mtx-grid-expansion-detail {
  min-height: 0;
}

.mtx-grid-animations-enabled .mtx-grid-expansion-detail-wrapper {
  transition: all 225ms cubic-bezier(0.4, 0, 0.2, 1);
}

.mtx-grid-row-expand-button {
  &.expanded .mtx-grid-row-expand-icon {
    transform: rotate(90deg);
  }

  &.mat-mdc-icon-button,
  + mtx-grid-cell {
    vertical-align: middle;
  }
}
