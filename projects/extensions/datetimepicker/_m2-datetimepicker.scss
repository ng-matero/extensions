@use 'sass:color';
@use 'sass:map';
@use 'sass:meta';
@use '@angular/material' as mat;
@use '../core/tokens/m2-utils';
@use '../core/tokens/m3-utils';
@use '../core/style/elevation';

$_selected-fade-amount: .6;
$_today-fade-amount: .2;

// Tokens that can't be configured through Angular Material's current theming API,
// but may be in a future version of the theming API.
@function get-unthemable-tokens() {
  @return (
    datetimepicker-container-elevation-shadow: elevation.get-box-shadow(4),
    datetimepicker-container-touch-elevation-shadow: elevation.get-box-shadow(24),
    datetimepicker-container-shape: 4px,
    datetimepicker-container-touch-shape: 4px,
    datetimepicker-selector-container-shape: 4px,
  );
}

// Tokens that can be configured through Angular Material's color theming API.
@function get-color-tokens($theme, $color-variant) {
  $system: m2-utils.get-system($theme);
  $system: m3-utils.replace-colors-with-variant($system, primary, $color-variant);
  $disabled: m3-utils.color-with-opacity(map.get($system, on-surface), 38%);

  @return (
    datetimepicker-calendar-date-selected-state-text-color: map.get($system, on-primary),
    datetimepicker-calendar-date-selected-state-background-color: map.get($system, primary),
    datetimepicker-calendar-date-selected-disabled-state-background-color:
      m3-utils.color-with-opacity(map.get($system, primary), 38%),
    datetimepicker-calendar-date-today-selected-state-outline-color: map.get($system, on-primary),
    datetimepicker-calendar-date-focus-state-background-color:
      m3-utils.color-with-opacity(map.get($system, primary), map.get($system, focus-state-layer-opacity)),
    datetimepicker-calendar-date-hover-state-background-color:
      m3-utils.color-with-opacity(map.get($system, primary), map.get($system, focus-state-layer-opacity)),

    datetimepicker-toggle-active-state-icon-color: map.get($system, primary),
    datetimepicker-toggle-icon-color: map.get($system, on-surface-variant),
    datetimepicker-calendar-body-label-text-color: map.get($system, on-surface-variant),
    // datepicker-calendar-period-button-text-color: map.get($system, on-surface),
    // datepicker-calendar-period-button-icon-color: map.get($system, on-surface-variant),
    // datepicker-calendar-navigation-button-icon-color: map.get($system, on-surface-variant),
    datetimepicker-calendar-header-divider-color: transparent,
    datetimepicker-calendar-header-text-color: white,

    datetimepicker-calendar-body-week-number-text-color: map.get($system, on-surface-variant),
    datetimepicker-calendar-header-background-color: map.get($system, primary),
    datetimepicker-calendar-table-header-text-color: map.get($system, on-surface-variant),

    datetimepicker-calendar-date-today-outline-color: map.get($system, on-surface-variant),
    // datetimepicker-calendar-date-today-disabled-state-outline-color: $disabled,
    datetimepicker-calendar-date-text-color: map.get($system, on-surface),
    datetimepicker-calendar-date-outline-color: transparent,
    datetimepicker-calendar-date-disabled-state-text-color: $disabled,
    // datetimepicker-calendar-date-preview-state-outline-color: map.get($system, on-surface-variant),

    datetimepicker-container-background-color: map.get($system, surface),
    datetimepicker-container-text-color: map.get($system, on-surface),

    datetimepicker-clock-dial-background-color: map.get($system, outline),
    datetimepicker-clock-cell-text-color: map.get($system, on-surface),
    datetimepicker-clock-cell-hover-state-background-color:
      m3-utils.color-with-opacity(map.get($system, on-surface), map.get($system, hover-state-layer-opacity)),
    datetimepicker-clock-cell-disabled-state-text-color: $disabled,
    datetimepicker-clock-cell-selected-state-background-color: map.get($system, primary),
    datetimepicker-clock-hand-background-color: map.get($system, primary),

    datetimepicker-time-input-active-state-text-color: map.get($system, primary),
    datetimepicker-time-input-active-state-background-color:
      m3-utils.color-with-opacity(map.get($system, primary), 20%),
    datetimepicker-time-input-focus-state-outline-color: map.get($system, primary),
    datetimepicker-time-input-focus-state-placeholder-text-color:
      m3-utils.color-with-opacity(map.get($system, primary), 60%),
    datetimepicker-time-input-text-color: map.get($system, on-surface),
    datetimepicker-time-input-background-color: map.get($system, outline),
    datetimepicker-time-input-focus-state-background-color: map.get($system, primary-container),
    datetimepicker-time-input-warn-state-outline-color: map.get($system, error),
    datetimepicker-time-ampm-text-color: m3-utils.color-with-opacity(map.get($system, on-surface), 75%),
    datetimepicker-time-ampm-outline-color: m3-utils.color-with-opacity(map.get($system, on-surface), 38%),
    datetimepicker-time-ampm-selected-state-text-color: map.get($system, on-surface),
    datetimepicker-time-ampm-selected-state-background-color:
      m3-utils.color-with-opacity(map.get($system, primary), 20%),
  );
}

// Tokens that can be configured through Angular Material's typography theming API.
@function get-typography-tokens($theme) {
  @return (
    datetimepicker-calendar-text-font: mat.get-theme-typography($theme, body-1, font-family),
    datetimepicker-calendar-text-size: 13px,

    datetimepicker-calendar-body-label-text-size: mat.get-theme-typography($theme, button, font-size),
    datetimepicker-calendar-body-label-text-weight: mat.get-theme-typography($theme, button, font-weight),

    datetimepicker-calendar-period-button-text-size: mat.get-theme-typography($theme, button, font-size),
    datetimepicker-calendar-period-button-text-weight: mat.get-theme-typography($theme, button, font-weight),

    datetimepicker-calendar-table-header-text-size: 11px,
    datetimepicker-calendar-table-header-text-weight: mat.get-theme-typography($theme, body-1, font-weight),

    datetimepicker-clock-text-size: 14px,
  );
}

// Tokens that can be configured through Angular Material's density theming API.
@function get-density-tokens($theme) {
  @return ();
}
