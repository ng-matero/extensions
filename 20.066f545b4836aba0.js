(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[20],{4476:(m,d,e)=>{"use strict";e.r(d),e.d(d,{default:()=>g});const g='<mat-radio-group [(ngModel)]="target">\n  <mat-radio-button [value]="target1">Target 1</mat-radio-button>\n  <mat-radio-button [value]="target2">Target 2</mat-radio-button>\n</mat-radio-group>\n\n<button\n  cdkDrag\n  mat-raised-button\n  color="primary"\n  #popoverTrigger="mtxPopoverTrigger"\n  [mtxPopoverTriggerFor]="popover"\n  [mtxPopoverTargetAt]="target"\n>\n  Show Popover\n</button>\n\n<mtx-popover #popover="mtxPopover">\n  <div style="max-width: 300px">\n    A material design popover component created using Angular with the Angular CDK.\n  </div>\n</mtx-popover>\n\n<div mtxPopoverTarget #target1="mtxPopoverTarget">popover target directive</div>\n\n<mtx-popover-target #target2="mtxPopoverTarget">popover target component</mtx-popover-target>\n'},9588:(m,d,e)=>{"use strict";e.r(d),e.d(d,{default:()=>g});const g="import { CdkDrag } from '@angular/cdk/drag-drop';\nimport { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSliderModule } from '@angular/material/slider';\nimport {\n  MtxPopoverModule,\n  MtxPopoverPositionEnd,\n  MtxPopoverPositionStart,\n  MtxPopoverTriggerEvent,\n} from '@ng-matero/extensions/popover';\n\n@Component({\n  selector: 'popover-configurable-example',\n  templateUrl: './app.html',\n  styleUrl: './app.scss',\n  imports: [\n    FormsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCheckboxModule,\n    MatSliderModule,\n    MatButtonModule,\n    MtxPopoverModule,\n    CdkDrag,\n  ],\n})\nexport class App implements OnInit {\n  triggerEvent: MtxPopoverTriggerEvent = 'hover';\n  enterDelay = 100;\n  leaveDelay = 100;\n  xOffset = 0;\n  yOffset = 0;\n  closeOnPanelClick = false;\n  hasBackdrop = true;\n  hideArrow = false;\n\n  positionXOptions = ['before', 'after'];\n  positionYOptions = ['above', 'below'];\n\n  positionStartOptions = [...this.positionYOptions, ...this.positionXOptions];\n  positionEndOptions: any[] = [];\n\n  positionStart: MtxPopoverPositionStart = 'below';\n  positionEnd: MtxPopoverPositionEnd = 'after';\n\n  onPositionStartChange(value?: string) {\n    if (this.positionXOptions.includes(this.positionStart)) {\n      this.positionEnd = 'below';\n      this.positionEndOptions = [...this.positionYOptions, 'center'];\n    }\n\n    if (this.positionYOptions.includes(this.positionStart)) {\n      this.positionEnd = 'after';\n      this.positionEndOptions = [...this.positionXOptions, 'center'];\n    }\n  }\n\n  ngOnInit() {\n    this.onPositionStartChange();\n  }\n}\n"},11511:(m,d,e)=>{"use strict";e.r(d),e.d(d,{default:()=>g});const g=".mat-mdc-form-field {\n  margin-right: 1rem;\n}\n\n.popover-position {\n  .mat-mdc-form-field {\n    width: 120px;\n    margin: 0;\n    font-size: 14px;\n  }\n}\n\nlabel {\n  padding: 0 8px;\n}\n"},14572:(m,d,e)=>{"use strict";e.r(d),e.d(d,{default:()=>g});const g="import { CdkDrag } from '@angular/cdk/drag-drop';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MtxPopoverModule } from '@ng-matero/extensions/popover';\n\n@Component({\n  selector: 'popover-target-example',\n  templateUrl: './app.html',\n  styleUrl: './app.scss',\n  imports: [FormsModule, MatRadioModule, MatButtonModule, MtxPopoverModule, CdkDrag],\n})\nexport class App {\n  target: any;\n}\n"},17993:m=>{m.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatButtonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/button&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxPopoverModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/popover&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;popover-lazy-rendering-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.scss&#x27;</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">MtxPopoverModule</span>, <span class="hljs-title class_">MatButtonModule</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">App</span> {}\n'},20014:(m,d,e)=>{"use strict";e.r(d),e.d(d,{default:()=>g});const g='<mtx-popover #popover="mtxPopover">\n  <ng-template mtxPopoverContent let-name="name">\n    <div>\n      Lazy rendering with additional context data\n      <strong>{{ name }}</strong>\n      .\n    </div>\n  </ng-template>\n</mtx-popover>\n\n<button\n  mat-raised-button\n  color="primary"\n  #popoverTrigger="mtxPopoverTrigger"\n  [mtxPopoverTriggerFor]="popover"\n  [mtxPopoverTriggerData]="{ name: \'Sally\' }"\n>\n  Show Sally\'s Popover\n</button>\n\n<button\n  mat-raised-button\n  color="primary"\n  #popoverTrigger="mtxPopoverTrigger"\n  [mtxPopoverTriggerFor]="popover"\n  [mtxPopoverTriggerData]="{ name: \'Bob\' }"\n>\n  Show Bob\'s Popover\n</button>\n'},28204:(m,d,e)=>{"use strict";e.r(d),e.d(d,{default:()=>g});const g='<h1 id="popover">Popover</h1>\n<h2 id="api-reference-for-material-extensions-popover">API reference for Material Extensions Popover</h2>\n<p><code>import { MtxPopoverModule } from &apos;@ng-matero/extensions/popover&apos;;</code></p>\n<h3 id="directives">Directives</h3>\n<h4 id="mtxpopover"><code>MtxPopover</code></h4>\n<p>Selector: <code>[mtx-popover]</code></p>\n<p>Exported as: <code>mtxPopover</code></p>\n<h5 id="properties">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input(&apos;aria-describedby&apos;)</code><br><code>ariaDescribedby: string</code></td>\n<td align="left">aria-describedby for the popover panel.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input(&apos;aria-label&apos;)</code><br><code>ariaLabel: string</code></td>\n<td align="left">aria-label for the popover panel.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input(&apos;aria-labelledby&apos;)</code><br><code>ariaLabelledby: string</code></td>\n<td align="left">aria-labelledby for the popover panel.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>triggerEvent: MtxPopoverTriggerEvent</code></td>\n<td align="left">Popover&apos;s trigger event. Default is <strong><code>hover</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>enterDelay: number</code></td>\n<td align="left">Popover&apos;s enter delay. Only support hover event. Default is <strong><code>100</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>leaveDelay: number</code></td>\n<td align="left">Popover&apos;s leave delay. Only support hover event. Default is <strong><code>100</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>position: MtxPopoverPosition</code></td>\n<td align="left">Popover&apos;s position. Default is <strong><code>[&apos;below&apos;, &apos;after&apos;]</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>xOffset: number</code></td>\n<td align="left">Popover-panel&apos;s X offset. Default is <strong><code>0</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>yOffset: number</code></td>\n<td align="left">Popover-panel&apos;s Y offset. Default is <strong><code>0</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>arrowWidth: number</code></td>\n<td align="left">Popover-arrow&apos;s width. Default is <strong><code>16</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>arrowHeight: number</code></td>\n<td align="left">Popover-arrow&apos;s height. Default is <strong><code>16</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>arrowOffsetX: number</code></td>\n<td align="left">Popover-arrow&apos;s X offset. Default is <strong><code>20</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>arrowOffsetY: number</code></td>\n<td align="left">Popover-arrow&apos;s Y offset. Default is <strong><code>20</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>hideArrow: boolean</code></td>\n<td align="left">Whether the popover arrow should be hidden. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>closeOnPanelClick: boolean</code></td>\n<td align="left">Whether popover can be closed when click the popover-panel. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>closeOnBackdropClick: boolean</code></td>\n<td align="left">Whether popover can be closed when click the backdrop. Default is <strong><code>true</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>focusTrapEnabled: boolean</code></td>\n<td align="left">Whether the popover should focus trap. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>focusTrapAutoCaptureEnabled: boolean</code></td>\n<td align="left">Whether the popover should focus trap auto capture. Default is <strong><code>false</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>backdropClass: string</code></td>\n<td align="left">Class to be added to the backdrop element.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>hasBackdrop: boolean | undefined</code></td>\n<td align="left">Whether the popover has a backdrop. It will always be false if the trigger event is hover.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input(&apos;class&apos;)</code><br><code>panelClass: string</code></td>\n<td align="left">This method takes classes set on the host mtx-popover element and applies them on the popover template that displays in the overlay container. Otherwise, it&apos;s difficult to style the containing popover from outside the component.</td>\n</tr>\n<tr>\n<td align="left"><code>@Output()</code><br><code>closed: EventEmitter&lt;PopoverCloseReason&gt;</code></td>\n<td align="left">Event emitted when the popover is closed.</td>\n</tr>\n</tbody></table>\n<h4 id="mtxpopovertrigger"><code>MtxPopoverTrigger</code></h4>\n<p>Selector: <code>[mtxPopoverTriggerFor]</code></p>\n<p>Exported as: <code>mtxPopoverTrigger</code></p>\n<h5 id="properties-1">Properties</h5>\n<table>\n<thead>\n<tr>\n<th align="left">Name</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align="left"><code>@Input()</code><br><code>mtxPopoverTriggerFor: MtxPopoverPanel</code></td>\n<td align="left">References the popover instance that the trigger is associated with.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>mtxPopoverTriggerOn: MtxPopoverTriggerEvent</code></td>\n<td align="left">Event for triggering popover click, hover and none. Default is <strong><code>&apos;hover&apos;</code></strong>.</td>\n</tr>\n<tr>\n<td align="left"><code>@Input()</code><br><code>mtxPopoverTargetAt: MtxPopoverTarget</code></td>\n<td align="left">References the popover target instance that the popover positioning is associated with.</td>\n</tr>\n</tbody></table>\n<h4 id="mtxpopovertarget"><code>MtxPopoverTarget</code></h4>\n<p>Selector: <code>mtx-popover-target, [mtxPopoverTarget]</code></p>\n<p>Exported as: <code>mtxPopoverTarget</code></p>\n<h3 id="interfaces">Interfaces</h3>\n<h4 id="mtxpopoverconfig"><code>MtxPopoverConfig</code></h4>\n<pre class="hljs"><span class="hljs-keyword">export</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">MtxPopoverDefaultOptions</span> {\n  <span class="hljs-attr">triggerEvent</span>?: <span class="hljs-title class_">MtxPopoverTriggerEvent</span>;\n  <span class="hljs-attr">enterDelay</span>?: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">leaveDelay</span>?: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">position</span>?: <span class="hljs-title class_">MtxPopoverPosition</span>;\n  <span class="hljs-attr">xOffset</span>?: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">yOffset</span>?: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">arrowWidth</span>?: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">arrowHeight</span>?: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">arrowOffsetX</span>?: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">arrowOffsetY</span>?: <span class="hljs-built_in">number</span>;\n  <span class="hljs-attr">hideArrow</span>?: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-attr">closeOnPanelClick</span>?: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-attr">closeOnBackdropClick</span>?: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-attr">overlayPanelClass</span>?: <span class="hljs-built_in">string</span>;\n  <span class="hljs-attr">backdropClass</span>?: <span class="hljs-built_in">string</span>;\n  <span class="hljs-attr">hasBackdrop</span>?: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-attr">focusTrapEnabled</span>?: <span class="hljs-built_in">boolean</span>;\n  <span class="hljs-attr">focusTrapAutoCaptureEnabled</span>?: <span class="hljs-built_in">boolean</span>;\n}\n</pre>\n<h3 id="type-aliases">Type aliases</h3>\n<h4 id="mtxpopoverpositionstart"><code>MtxPopoverPositionStart</code></h4>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxPopoverPositionStart</span> = <span class="hljs-string">&apos;above&apos;</span> | <span class="hljs-string">&apos;below&apos;</span> | <span class="hljs-string">&apos;before&apos;</span> | <span class="hljs-string">&apos;after&apos;</span>;\n</pre>\n<h4 id="mtxpopoverpositionend"><code>MtxPopoverPositionEnd</code></h4>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxPopoverPositionEnd</span> = <span class="hljs-title class_">MtxPopoverPositionStart</span> | <span class="hljs-string">&apos;center&apos;</span>;\n</pre>\n<h4 id="mtxpopoverposition"><code>MtxPopoverPosition</code></h4>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxPopoverPosition</span> = [<span class="hljs-title class_">MtxPopoverPositionStart</span>, <span class="hljs-title class_">MtxPopoverPositionEnd</span>];\n</pre>\n<h4 id="mtxpopovertriggerevent"><code>MtxPopoverTriggerEvent</code></h4>\n<pre class="hljs"><span class="hljs-keyword">type</span> <span class="hljs-title class_">MtxPopoverTriggerEvent</span> = <span class="hljs-string">&apos;click&apos;</span> | <span class="hljs-string">&apos;hover&apos;</span> | <span class="hljs-string">&apos;none&apos;</span>;\n</pre>\n<h3 id="constants">Constants</h3>\n<h4 id="mtx_popover_default_options"><code>MTX_POPOVER_DEFAULT_OPTIONS</code></h4>\n<p>Injection token to be used to override the default options for <code>mtx-popover</code>.</p>\n<pre class="hljs"><span class="hljs-keyword">const</span> <span class="hljs-attr">MTX_POPOVER_DEFAULT_OPTIONS</span>: <span class="hljs-title class_">InjectionToken</span>&lt;<span class="hljs-title class_">MtxPopoverDefaultOptions</span>&gt;;\n</pre>\n<h4 id="mtx_popover_scroll_strategy"><code>MTX_POPOVER_SCROLL_STRATEGY</code></h4>\n<p>Injection token that determines the scroll handling while the popover is open.</p>\n<pre class="hljs"><span class="hljs-keyword">const</span> <span class="hljs-attr">MTX_POPOVER_SCROLL_STRATEGY</span>: <span class="hljs-title class_">InjectionToken</span>&lt;<span class="hljs-function">() =&gt;</span> <span class="hljs-title class_">ScrollStrategy</span>&gt;;\n</pre>\n<h4 id="mtx_popover_content"><code>MTX_POPOVER_CONTENT</code></h4>\n<p>Injection token that can be used to reference instances of <code>MtxPopoverContent</code>. It serves as alternative token to the actual <code>MtxPopoverContent</code> class which could cause unnecessary retention of the class and its directive metadata.</p>\n<pre class="hljs"><span class="hljs-keyword">const</span> <span class="hljs-attr">MTX_POPOVER_CONTENT</span>: <span class="hljs-title class_">InjectionToken</span>&lt;<span class="hljs-title class_">MtxPopoverContent</span>&gt;;\n</pre>\n'},28579:m=>{m.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mtx-popover</span> #<span class="hljs-attr">popover</span>=<span class="hljs-string">&quot;mtxPopover&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">ng-template</span> <span class="hljs-attr">mtxPopoverContent</span> <span class="hljs-attr">let-name</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>\n      Lazy rendering with additional context data\n      <span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span>{{ name }}<span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>\n      .\n    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">ng-template</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-popover</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>\n  <span class="hljs-attr">mat-raised-button</span>\n  <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>\n  #<span class="hljs-attr">popoverTrigger</span>=<span class="hljs-string">&quot;mtxPopoverTrigger&quot;</span>\n  [<span class="hljs-attr">mtxPopoverTriggerFor</span>]=<span class="hljs-string">&quot;popover&quot;</span>\n  [<span class="hljs-attr">mtxPopoverTriggerData</span>]=<span class="hljs-string">&quot;{ name: &#x27;Sally&#x27; }&quot;</span>\n&gt;</span>\n  Show Sally&#x27;s Popover\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>\n  <span class="hljs-attr">mat-raised-button</span>\n  <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>\n  #<span class="hljs-attr">popoverTrigger</span>=<span class="hljs-string">&quot;mtxPopoverTrigger&quot;</span>\n  [<span class="hljs-attr">mtxPopoverTriggerFor</span>]=<span class="hljs-string">&quot;popover&quot;</span>\n  [<span class="hljs-attr">mtxPopoverTriggerData</span>]=<span class="hljs-string">&quot;{ name: &#x27;Bob&#x27; }&quot;</span>\n&gt;</span>\n  Show Bob&#x27;s Popover\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n'},32426:(m,d,e)=>{"use strict";e.r(d),e.d(d,{default:()=>g});const g="import { Component } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MtxPopoverModule } from '@ng-matero/extensions/popover';\n\n@Component({\n  selector: 'popover-lazy-rendering-example',\n  templateUrl: './app.html',\n  styleUrl: './app.scss',\n  imports: [MtxPopoverModule, MatButtonModule],\n})\nexport class App {}\n"},33121:m=>{m.exports='<span class="hljs-selector-class">.mat-mdc-form-field</span> {\n  <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">1rem</span>;\n}\n\n<span class="hljs-selector-class">.popover-position</span> {\n  <span class="hljs-selector-class">.mat-mdc-form-field</span> {\n    <span class="hljs-attribute">width</span>: <span class="hljs-number">120px</span>;\n    <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;\n    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">14px</span>;\n  }\n}\n\n<span class="hljs-selector-tag">label</span> {\n  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">8px</span>;\n}\n'},33681:m=>{m.exports='<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Popover configuration<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;popover-position&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>Position:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  [\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>Start<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-select</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;positionStart&quot;</span> (<span class="hljs-attr">ngModelChange</span>)=<span class="hljs-string">&quot;onPositionStartChange()&quot;</span>&gt;</span>\n      @for (item of positionStartOptions; track item) {\n        <span class="hljs-tag">&lt;<span class="hljs-name">mat-option</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>{{ item }}<span class="hljs-tag">&lt;/<span class="hljs-name">mat-option</span>&gt;</span>\n      }\n    <span class="hljs-tag">&lt;/<span class="hljs-name">mat-select</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n  ,\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>End<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-select</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;positionEnd&quot;</span>&gt;</span>\n      @for (item of positionEndOptions; track item) {\n        <span class="hljs-tag">&lt;<span class="hljs-name">mat-option</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;item&quot;</span>&gt;</span>{{ item }}<span class="hljs-tag">&lt;/<span class="hljs-name">mat-option</span>&gt;</span>\n      }\n    <span class="hljs-tag">&lt;/<span class="hljs-name">mat-select</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n  ]\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>XOffset<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;xOffset&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>YOffset<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;yOffset&quot;</span> /&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">&quot;&quot;</span>&gt;</span>TriggerEvent:<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;triggerEvent&quot;</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;hover&quot;</span>&gt;</span>Hover<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;click&quot;</span>&gt;</span>Click<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n@if (triggerEvent === &#x27;hover&#x27;) {\n  <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>EnterDelay<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;enterDelay&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-form-field</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">mat-label</span>&gt;</span>LeaveDelay<span class="hljs-tag">&lt;/<span class="hljs-name">mat-label</span>&gt;</span>\n      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">matInput</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;number&quot;</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;leaveDelay&quot;</span> /&gt;</span>\n    <span class="hljs-tag">&lt;/<span class="hljs-name">mat-form-field</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n}\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;closeOnPanelClick&quot;</span>&gt;</span>CloseOnPanelClick<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n@if (triggerEvent === &#x27;click&#x27;) {\n  <span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n    <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;hasBackdrop&quot;</span>&gt;</span>HasBackdrop<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n  <span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n}\n\n<span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-checkbox</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;hideArrow&quot;</span>&gt;</span>HideArrow<span class="hljs-tag">&lt;/<span class="hljs-name">mat-checkbox</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>Result<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>\n\n@if (triggerEvent === &#x27;hover&#x27;) {\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span>\n    <span class="hljs-attr">cdkDrag</span>\n    <span class="hljs-attr">mat-raised-button</span>\n    <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>\n    #<span class="hljs-attr">popoverTrigger</span>=<span class="hljs-string">&quot;mtxPopoverTrigger&quot;</span>\n    [<span class="hljs-attr">mtxPopoverTriggerFor</span>]=<span class="hljs-string">&quot;popover&quot;</span>\n    <span class="hljs-attr">mtxPopoverTriggerOn</span>=<span class="hljs-string">&quot;hover&quot;</span>\n  &gt;</span>\n    Show Popover With Hover\n  <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n}\n\n@if (triggerEvent === &#x27;click&#x27;) {\n  <span class="hljs-tag">&lt;<span class="hljs-name">button</span>\n    <span class="hljs-attr">cdkDrag</span>\n    <span class="hljs-attr">mat-raised-button</span>\n    <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>\n    #<span class="hljs-attr">popoverTrigger2</span>=<span class="hljs-string">&quot;mtxPopoverTrigger&quot;</span>\n    [<span class="hljs-attr">mtxPopoverTriggerFor</span>]=<span class="hljs-string">&quot;popover&quot;</span>\n    <span class="hljs-attr">mtxPopoverTriggerOn</span>=<span class="hljs-string">&quot;click&quot;</span>\n  &gt;</span>\n    Show Popover With Click\n  <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n}\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-popover</span>\n  #<span class="hljs-attr">popover</span>=<span class="hljs-string">&quot;mtxPopover&quot;</span>\n  [<span class="hljs-attr">enterDelay</span>]=<span class="hljs-string">&quot;enterDelay&quot;</span>\n  [<span class="hljs-attr">leaveDelay</span>]=<span class="hljs-string">&quot;leaveDelay&quot;</span>\n  [<span class="hljs-attr">position</span>]=<span class="hljs-string">&quot;[positionStart, positionEnd]&quot;</span>\n  [<span class="hljs-attr">xOffset</span>]=<span class="hljs-string">&quot;xOffset&quot;</span>\n  [<span class="hljs-attr">yOffset</span>]=<span class="hljs-string">&quot;yOffset&quot;</span>\n  [<span class="hljs-attr">closeOnPanelClick</span>]=<span class="hljs-string">&quot;closeOnPanelClick&quot;</span>\n  [<span class="hljs-attr">closeOnBackdropClick</span>]=<span class="hljs-string">&quot;true&quot;</span>\n  [<span class="hljs-attr">hasBackdrop</span>]=<span class="hljs-string">&quot;hasBackdrop&quot;</span>\n  [<span class="hljs-attr">hideArrow</span>]=<span class="hljs-string">&quot;hideArrow&quot;</span>\n&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;max-width: 300px&quot;</span>&gt;</span>\n    A material design popover component created using Angular with the Angular CDK.\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-popover</span>&gt;</span>\n'},35551:m=>{m.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CdkDrag</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/cdk/drag-drop&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span>, <span class="hljs-title class_">OnInit</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatButtonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/button&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatCheckboxModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/checkbox&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatFormFieldModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/form-field&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatInputModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/input&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatRadioModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/radio&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatSelectModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/select&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatSliderModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/slider&#x27;</span>;\n<span class="hljs-keyword">import</span> {\n  <span class="hljs-title class_">MtxPopoverModule</span>,\n  <span class="hljs-title class_">MtxPopoverPositionEnd</span>,\n  <span class="hljs-title class_">MtxPopoverPositionStart</span>,\n  <span class="hljs-title class_">MtxPopoverTriggerEvent</span>,\n} <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/popover&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;popover-configurable-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.scss&#x27;</span>,\n  <span class="hljs-attr">imports</span>: [\n    <span class="hljs-title class_">FormsModule</span>,\n    <span class="hljs-title class_">MatFormFieldModule</span>,\n    <span class="hljs-title class_">MatInputModule</span>,\n    <span class="hljs-title class_">MatSelectModule</span>,\n    <span class="hljs-title class_">MatRadioModule</span>,\n    <span class="hljs-title class_">MatCheckboxModule</span>,\n    <span class="hljs-title class_">MatSliderModule</span>,\n    <span class="hljs-title class_">MatButtonModule</span>,\n    <span class="hljs-title class_">MtxPopoverModule</span>,\n    <span class="hljs-title class_">CdkDrag</span>,\n  ],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">OnInit</span> {\n  <span class="hljs-attr">triggerEvent</span>: <span class="hljs-title class_">MtxPopoverTriggerEvent</span> = <span class="hljs-string">&#x27;hover&#x27;</span>;\n  enterDelay = <span class="hljs-number">100</span>;\n  leaveDelay = <span class="hljs-number">100</span>;\n  xOffset = <span class="hljs-number">0</span>;\n  yOffset = <span class="hljs-number">0</span>;\n  closeOnPanelClick = <span class="hljs-literal">false</span>;\n  hasBackdrop = <span class="hljs-literal">true</span>;\n  hideArrow = <span class="hljs-literal">false</span>;\n\n  positionXOptions = [<span class="hljs-string">&#x27;before&#x27;</span>, <span class="hljs-string">&#x27;after&#x27;</span>];\n  positionYOptions = [<span class="hljs-string">&#x27;above&#x27;</span>, <span class="hljs-string">&#x27;below&#x27;</span>];\n\n  positionStartOptions = [...<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionYOptions</span>, ...<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionXOptions</span>];\n  <span class="hljs-attr">positionEndOptions</span>: <span class="hljs-built_in">any</span>[] = [];\n\n  <span class="hljs-attr">positionStart</span>: <span class="hljs-title class_">MtxPopoverPositionStart</span> = <span class="hljs-string">&#x27;below&#x27;</span>;\n  <span class="hljs-attr">positionEnd</span>: <span class="hljs-title class_">MtxPopoverPositionEnd</span> = <span class="hljs-string">&#x27;after&#x27;</span>;\n\n  <span class="hljs-title function_">onPositionStartChange</span>(<span class="hljs-params"><span class="hljs-attr">value</span>?: <span class="hljs-built_in">string</span></span>) {\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionXOptions</span>.<span class="hljs-title function_">includes</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionStart</span>)) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">positionEnd</span> = <span class="hljs-string">&#x27;below&#x27;</span>;\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">positionEndOptions</span> = [...<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionYOptions</span>, <span class="hljs-string">&#x27;center&#x27;</span>];\n    }\n\n    <span class="hljs-keyword">if</span> (<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionYOptions</span>.<span class="hljs-title function_">includes</span>(<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionStart</span>)) {\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">positionEnd</span> = <span class="hljs-string">&#x27;after&#x27;</span>;\n      <span class="hljs-variable language_">this</span>.<span class="hljs-property">positionEndOptions</span> = [...<span class="hljs-variable language_">this</span>.<span class="hljs-property">positionXOptions</span>, <span class="hljs-string">&#x27;center&#x27;</span>];\n    }\n  }\n\n  <span class="hljs-title function_">ngOnInit</span>(<span class="hljs-params"></span>) {\n    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">onPositionStartChange</span>();\n  }\n}\n'},37645:m=>{m.exports='<span class="hljs-selector-attr">[mtxPopoverTarget]</span>,\nmtx-popover-target {\n  <span class="hljs-attribute">display</span>: flex;\n  <span class="hljs-attribute">align-items</span>: center;\n  <span class="hljs-attribute">height</span>: <span class="hljs-number">64px</span>;\n  <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span> <span class="hljs-number">1em</span>;\n  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">1em</span>;\n  <span class="hljs-attribute">background</span>: whitesmoke;\n  <span class="hljs-attribute">color</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, .<span class="hljs-number">87</span>);\n  <span class="hljs-attribute">font</span>: <span class="hljs-number">500</span> <span class="hljs-number">20px</span> / <span class="hljs-number">32px</span> Roboto, <span class="hljs-string">&#x27;Helvetica Neue&#x27;</span>, sans-serif;\n}\n\n<span class="hljs-selector-class">.mat-toolbar</span> {\n  <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">1em</span>;\n}\n\n<span class="hljs-selector-class">.mat-mdc-button-base</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> .<span class="hljs-number">5em</span>;\n}\n'},41812:(m,d,e)=>{"use strict";e.r(d),e.d(d,{default:()=>g});const g='<h2>Popover configuration</h2>\n\n<section class="popover-position">\n  <label for="">Position:</label>\n  [\n  <mat-form-field>\n    <mat-label>Start</mat-label>\n    <mat-select [(ngModel)]="positionStart" (ngModelChange)="onPositionStartChange()">\n      @for (item of positionStartOptions; track item) {\n        <mat-option [value]="item">{{ item }}</mat-option>\n      }\n    </mat-select>\n  </mat-form-field>\n  ,\n  <mat-form-field>\n    <mat-label>End</mat-label>\n    <mat-select [(ngModel)]="positionEnd">\n      @for (item of positionEndOptions; track item) {\n        <mat-option [value]="item">{{ item }}</mat-option>\n      }\n    </mat-select>\n  </mat-form-field>\n  ]\n</section>\n\n<section>\n  <mat-form-field>\n    <mat-label>XOffset</mat-label>\n    <input matInput type="number" [(ngModel)]="xOffset" />\n  </mat-form-field>\n  <mat-form-field>\n    <mat-label>YOffset</mat-label>\n    <input matInput type="number" [(ngModel)]="yOffset" />\n  </mat-form-field>\n</section>\n\n<section>\n  <label for="">TriggerEvent:</label>\n  <mat-radio-group [(ngModel)]="triggerEvent">\n    <mat-radio-button value="hover">Hover</mat-radio-button>\n    <mat-radio-button value="click">Click</mat-radio-button>\n  </mat-radio-group>\n</section>\n\n@if (triggerEvent === \'hover\') {\n  <section>\n    <mat-form-field>\n      <mat-label>EnterDelay</mat-label>\n      <input matInput type="number" [(ngModel)]="enterDelay" />\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label>LeaveDelay</mat-label>\n      <input matInput type="number" [(ngModel)]="leaveDelay" />\n    </mat-form-field>\n  </section>\n}\n\n<section>\n  <mat-checkbox [(ngModel)]="closeOnPanelClick">CloseOnPanelClick</mat-checkbox>\n</section>\n\n@if (triggerEvent === \'click\') {\n  <section>\n    <mat-checkbox [(ngModel)]="hasBackdrop">HasBackdrop</mat-checkbox>\n  </section>\n}\n\n<section>\n  <mat-checkbox [(ngModel)]="hideArrow">HideArrow</mat-checkbox>\n</section>\n\n<h2>Result</h2>\n\n@if (triggerEvent === \'hover\') {\n  <button\n    cdkDrag\n    mat-raised-button\n    color="primary"\n    #popoverTrigger="mtxPopoverTrigger"\n    [mtxPopoverTriggerFor]="popover"\n    mtxPopoverTriggerOn="hover"\n  >\n    Show Popover With Hover\n  </button>\n}\n\n@if (triggerEvent === \'click\') {\n  <button\n    cdkDrag\n    mat-raised-button\n    color="primary"\n    #popoverTrigger2="mtxPopoverTrigger"\n    [mtxPopoverTriggerFor]="popover"\n    mtxPopoverTriggerOn="click"\n  >\n    Show Popover With Click\n  </button>\n}\n\n<mtx-popover\n  #popover="mtxPopover"\n  [enterDelay]="enterDelay"\n  [leaveDelay]="leaveDelay"\n  [position]="[positionStart, positionEnd]"\n  [xOffset]="xOffset"\n  [yOffset]="yOffset"\n  [closeOnPanelClick]="closeOnPanelClick"\n  [closeOnBackdropClick]="true"\n  [hasBackdrop]="hasBackdrop"\n  [hideArrow]="hideArrow"\n>\n  <div style="max-width: 300px">\n    A material design popover component created using Angular with the Angular CDK.\n  </div>\n</mtx-popover>\n'},66263:m=>{m.exports='<span class="hljs-keyword">import</span> { <span class="hljs-title class_">CdkDrag</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/cdk/drag-drop&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">Component</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/core&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">FormsModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/forms&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatButtonModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/button&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MatRadioModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@angular/material/radio&#x27;</span>;\n<span class="hljs-keyword">import</span> { <span class="hljs-title class_">MtxPopoverModule</span> } <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@ng-matero/extensions/popover&#x27;</span>;\n\n<span class="hljs-meta">@Component</span>({\n  <span class="hljs-attr">selector</span>: <span class="hljs-string">&#x27;popover-target-example&#x27;</span>,\n  <span class="hljs-attr">templateUrl</span>: <span class="hljs-string">&#x27;./app.html&#x27;</span>,\n  <span class="hljs-attr">styleUrl</span>: <span class="hljs-string">&#x27;./app.scss&#x27;</span>,\n  <span class="hljs-attr">imports</span>: [<span class="hljs-title class_">FormsModule</span>, <span class="hljs-title class_">MatRadioModule</span>, <span class="hljs-title class_">MatButtonModule</span>, <span class="hljs-title class_">MtxPopoverModule</span>, <span class="hljs-title class_">CdkDrag</span>],\n})\n<span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">App</span> {\n  <span class="hljs-attr">target</span>: <span class="hljs-built_in">any</span>;\n}\n'},66319:m=>{m.exports='<span class="hljs-selector-class">.mat-mdc-button-base</span> {\n  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> .<span class="hljs-number">5em</span>;\n}\n'},67089:(m,d,e)=>{"use strict";e.r(d),e.d(d,{default:()=>g});const g=".mat-mdc-button-base {\n  margin: 0 .5em;\n}\n"},67951:(m,d,e)=>{"use strict";e.r(d),e.d(d,{default:()=>g});const g="[mtxPopoverTarget],\nmtx-popover-target {\n  display: flex;\n  align-items: center;\n  height: 64px;\n  padding: 0 1em;\n  margin-top: 1em;\n  background: whitesmoke;\n  color: rgba(0, 0, 0, .87);\n  font: 500 20px / 32px Roboto, 'Helvetica Neue', sans-serif;\n}\n\n.mat-toolbar {\n  margin-top: 1em;\n}\n\n.mat-mdc-button-base {\n  margin: 0 .5em;\n}\n"},95829:m=>{m.exports='<span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-group</span> [(<span class="hljs-attr">ngModel</span>)]=<span class="hljs-string">&quot;target&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;target1&quot;</span>&gt;</span>Target 1<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">mat-radio-button</span> [<span class="hljs-attr">value</span>]=<span class="hljs-string">&quot;target2&quot;</span>&gt;</span>Target 2<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-button</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mat-radio-group</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">button</span>\n  <span class="hljs-attr">cdkDrag</span>\n  <span class="hljs-attr">mat-raised-button</span>\n  <span class="hljs-attr">color</span>=<span class="hljs-string">&quot;primary&quot;</span>\n  #<span class="hljs-attr">popoverTrigger</span>=<span class="hljs-string">&quot;mtxPopoverTrigger&quot;</span>\n  [<span class="hljs-attr">mtxPopoverTriggerFor</span>]=<span class="hljs-string">&quot;popover&quot;</span>\n  [<span class="hljs-attr">mtxPopoverTargetAt</span>]=<span class="hljs-string">&quot;target&quot;</span>\n&gt;</span>\n  Show Popover\n<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-popover</span> #<span class="hljs-attr">popover</span>=<span class="hljs-string">&quot;mtxPopover&quot;</span>&gt;</span>\n  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;max-width: 300px&quot;</span>&gt;</span>\n    A material design popover component created using Angular with the Angular CDK.\n  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-popover</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">mtxPopoverTarget</span> #<span class="hljs-attr">target1</span>=<span class="hljs-string">&quot;mtxPopoverTarget&quot;</span>&gt;</span>popover target directive<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>\n\n<span class="hljs-tag">&lt;<span class="hljs-name">mtx-popover-target</span> #<span class="hljs-attr">target2</span>=<span class="hljs-string">&quot;mtxPopoverTarget&quot;</span>&gt;</span>popover target component<span class="hljs-tag">&lt;/<span class="hljs-name">mtx-popover-target</span>&gt;</span>\n'},96020:(m,d,e)=>{"use strict";e.r(d),e.d(d,{PopoverApi:()=>K,PopoverOverview:()=>z,routes:()=>Ys});var g=e(72200),r=e(2615),I=e(71782),Q=e(4840),$=e(9105),Y=e(1875),u=e(89417),_=e(88834),L=e(82765),J=e(71228),q=e(33746),y=e(34522),V=e(40286),Z=e(43881),P=e(31459),N=e(17094),ss=e(76838),ts=e(95735),as=e(61577),O=e(10438),T=e(76939),s=e(73664),v=e(17705),C=e(18359),ns=e(7673),es=e(57786),os=e(5964),ls=e(96697),rs=e(67336),H=e(21413);const W=new r.nKC("MtxPopoverContent");let ps=(()=>{var l;class o{constructor(t,a,n,p,c,h){this._template=t,this._appRef=a,this._injector=n,this._viewContainerRef=p,this._document=c,this._changeDetectorRef=h,this._attached=new H.B}attach(t={}){this._portal||(this._portal=new T.VA(this._template,this._viewContainerRef)),this.detach(),this._outlet||(this._outlet=new T.aI(this._document.createElement("div"),this._appRef,this._injector));const a=this._template.elementRef.nativeElement;a.parentNode.insertBefore(this._outlet.outletElement,a),this._changeDetectorRef&&this._changeDetectorRef.markForCheck(),this._portal.attach(this._outlet,t),this._attached.next()}detach(){this._portal.isAttached&&this._portal.detach()}ngOnDestroy(){this._outlet&&this._outlet.dispose()}static#s=l=()=>(this.\u0275fac=function(a){return new(a||o)(s.rXU(s.C4Q),s.rXU(s.o8S),s.rXU(r.zZn),s.rXU(s.c1b),s.rXU(r.qQL),s.rXU(v.gRc))},this.\u0275dir=s.FsC({type:o}))}return l(),o})(),is=(()=>{var l;class o extends ps{static#s=l=()=>(this.\u0275fac=(()=>{let t;return function(n){return(t||(t=s.xGo(o)))(n||o)}})(),this.\u0275dir=s.FsC({type:o,selectors:[["ng-template","mtxPopoverContent",""]],features:[s.Jv_([{provide:W,useExisting:o}]),s.Vt3]}))}return l(),o})();const ms=["*"];function gs(l,o){if(1&l&&s.nrm(0,"div",3),2&l){const i=s.XpG(2);s.Aen(i.arrowStyles)}}function vs(l,o){if(1&l){const i=s.RV6();s.j41(0,"div",0),s.bIt("keydown",function(a){r.eBV(i);const n=s.XpG();return r.Njj(n._handleKeydown(a))})("click",function(){r.eBV(i);const a=s.XpG();return r.Njj(a._handleClick())})("mouseover",function(){r.eBV(i);const a=s.XpG();return r.Njj(a._handleMouseOver())})("mouseleave",function(){r.eBV(i);const a=s.XpG();return r.Njj(a._handleMouseLeave())})("animationstart",function(a){r.eBV(i);const n=s.XpG();return r.Njj(n._onAnimationStart(a.animationName))})("animationend",function(a){r.eBV(i);const n=s.XpG();return r.Njj(n._onAnimationDone(a.animationName))})("animationcancel",function(a){r.eBV(i);const n=s.XpG();return r.Njj(n._onAnimationDone(a.animationName))}),s.j41(1,"div",1),s.SdG(2),s.k0s(),s.nVh(3,gs,1,2,"div",2),s.k0s()}if(2&l){const i=s.XpG();s.HbH(i._classList),s.AVh("mtx-popover-panel-animations-disabled",i._animationsDisabled)("mtx-popover-panel-exit-animation","void"===i._panelAnimationState)("mtx-popover-panel-animating",i._isAnimating)("mtx-popover-panel-without-arrow",i.hideArrow),s.Y8G("id",i.panelId)("cdkTrapFocus",i.focusTrapEnabled)("cdkTrapFocusAutoCapture",i.focusTrapAutoCaptureEnabled),s.BMQ("aria-label",i.ariaLabel||null)("aria-labelledby",i.ariaLabelledby||null)("aria-describedby",i.ariaDescribedby||null),s.R7$(3),s.vxM(i.hideArrow?-1:3)}}const us=new r.nKC("mtx-popover-default-options",{providedIn:"root",factory:function fs(){return{backdropClass:"cdk-overlay-transparent-backdrop"}}});let js=0;const E="_mtx-popover-enter",k="_mtx-popover-exit";let M=(()=>{var l;class o{get position(){return this._position}set position(t){["before","after","above","below"].includes(t[0])||function hs(){throw Error("mtxPopoverPosition[0] value must be either 'above', 'below', 'before' or 'after'.\n    Example: <mtx-popover [position]=\"['below', 'after']\" #popover=\"mtxPopover\"></mtx-popover>")}(),["before","after","above","below","center"].includes(t[1])||function ds(){throw Error("mtxPopoverPosition[1] value must be either 'above', 'below', 'before', 'after' or 'center'.\n    Example: <mtx-popover [position]=\"['below', 'after']\" #popover=\"mtxPopover\"></mtx-popover>")}(),this._position=t,this.setPositionClasses()}set panelClass(t){const a=this._previousPanelClass,n={...this._classList};a&&a.length&&a.split(" ").forEach(p=>{n[p]=!1}),this._previousPanelClass=t,t&&t.length&&(t.split(" ").forEach(p=>{n[p]=!0}),this._elementRef.nativeElement.className="",this.setPositionClasses()),this._classList=n}get classList(){return this.panelClass}set classList(t){this.panelClass=t}constructor(){this._injector=(0,r.WQX)(r.zZn),this._changeDetectorRef=(0,r.WQX)(v.gRc),this._elementRef=(0,r.WQX)(s.aKT),this._unusedNgZone=(0,r.WQX)(s.SKi),this._defaultOptions=(0,r.WQX)(us),this._elevationPrefix="mat-elevation-z",this._baseElevation=null,this._animationsDisabled=!1,this._classList={},this._panelAnimationState="void",this._animationDone=new H.B,this._isAnimating=!1,this.closeDisabled=!1,this.overlayPanelClass=this._defaultOptions.overlayPanelClass||"",this.backdropClass=this._defaultOptions.backdropClass,this.triggerEvent=this._defaultOptions.triggerEvent??"hover",this.enterDelay=this._defaultOptions.enterDelay??100,this.leaveDelay=this._defaultOptions.leaveDelay??100,this._position=this._defaultOptions.position??["below","after"],this.xOffset=this._defaultOptions.xOffset??0,this.yOffset=this._defaultOptions.yOffset??0,this.arrowWidth=this._defaultOptions.arrowWidth??16,this.arrowHeight=this._defaultOptions.arrowHeight??16,this.arrowOffsetX=this._defaultOptions.arrowOffsetX??20,this.arrowOffsetY=this._defaultOptions.arrowOffsetY??20,this.hideArrow=this._defaultOptions.hideArrow??!1,this.closeOnPanelClick=this._defaultOptions.closeOnPanelClick??!1,this.closeOnBackdropClick=this._defaultOptions.closeOnBackdropClick??!0,this.focusTrapEnabled=this._defaultOptions.focusTrapEnabled??!1,this.focusTrapAutoCaptureEnabled=this._defaultOptions.focusTrapAutoCaptureEnabled??!1,this.hasBackdrop=this._defaultOptions.hasBackdrop,this.closed=new s.bkB,this.panelId="mtx-popover-panel-"+js++,this._animationsDisabled="NoopAnimations"===(0,r.WQX)(s.bc$,{optional:!0})}ngOnInit(){this.setPositionClasses()}ngOnDestroy(){this.closed.complete(),clearTimeout(this._exitFallbackTimeout)}_handleKeydown(t){t.keyCode===O._f&&((0,rs.rp)(t)||(t.preventDefault(),this.closed.emit("keydown")))}_handleClick(){this.closeOnPanelClick&&this.closed.emit("click")}_handleMouseOver(){"hover"===this.triggerEvent&&(this.closeDisabled=!0)}_handleMouseLeave(){"hover"===this.triggerEvent&&setTimeout(()=>{this.closeDisabled=!1,this.closed.emit()},this.leaveDelay)}setCurrentStyles(t=this.position){const a="after"===t[1]?this.arrowOffsetX-this.arrowWidth/2+"px":"center"===t[1]?`calc(50% - ${this.arrowWidth/2}px)`:"",n="before"===t[1]?this.arrowOffsetX-this.arrowWidth/2+"px":"";this.arrowStyles="above"===t[0]||"below"===t[0]?{left:"ltr"===this.direction?a:n,right:"ltr"===this.direction?n:a}:{top:"below"===t[1]?this.arrowOffsetY-this.arrowHeight/2+"px":"",bottom:"above"===t[1]?this.arrowOffsetY-this.arrowHeight/2+"px":"center"===t[1]?`calc(50% - ${this.arrowHeight/2}px)`:""}}setPositionClasses(t=this.position){this._classList={...this._classList,"mtx-popover-before-above":"before"===t[0]&&"above"===t[1],"mtx-popover-before-center":"before"===t[0]&&"center"===t[1],"mtx-popover-before-below":"before"===t[0]&&"below"===t[1],"mtx-popover-after-above":"after"===t[0]&&"above"===t[1],"mtx-popover-after-center":"after"===t[0]&&"center"===t[1],"mtx-popover-after-below":"after"===t[0]&&"below"===t[1],"mtx-popover-above-before":"above"===t[0]&&"before"===t[1],"mtx-popover-above-center":"above"===t[0]&&"center"===t[1],"mtx-popover-above-after":"above"===t[0]&&"after"===t[1],"mtx-popover-below-before":"below"===t[0]&&"before"===t[1],"mtx-popover-below-center":"below"===t[0]&&"center"===t[1],"mtx-popover-below-after":"below"===t[0]&&"after"===t[1]},this._changeDetectorRef.markForCheck()}setElevation(){if(null===this._baseElevation){const c=("function"==typeof getComputedStyle?getComputedStyle(this._elementRef.nativeElement):null)?.getPropertyValue("--mtx-popover-base-elevation-level")||"8";this._baseElevation=parseInt(c)}const t=Math.min(this._baseElevation,24),a=`${this._elevationPrefix}${t}`,n=Object.keys(this._classList).find(p=>p.startsWith(this._elevationPrefix));if(!n||n===this._previousElevation){const p={...this._classList};this._previousElevation&&(p[this._previousElevation]=!1),p[a]=!0,this._previousElevation=a,this._classList=p}}_onAnimationDone(t){const a=t===k;(a||t===E)&&(a&&(clearTimeout(this._exitFallbackTimeout),this._exitFallbackTimeout=void 0),this._animationDone.next(a?"void":"enter"),this._isAnimating=!1)}_onAnimationStart(t){(t===E||t===k)&&(this._isAnimating=!0)}_setIsOpen(t){this._panelAnimationState=t?"enter":"void",t||this._animationsDisabled||(this._exitFallbackTimeout=setTimeout(()=>this._onAnimationDone(k),200)),this._animationsDisabled&&setTimeout(()=>{this._onAnimationDone(t?E:k)}),this._changeDetectorRef.markForCheck()}static#s=l=()=>(this.\u0275fac=function(a){return new(a||o)},this.\u0275cmp=s.VBU({type:o,selectors:[["mtx-popover"]],contentQueries:function(a,n,p){if(1&a&&s.wni(p,W,5),2&a){let c;s.mGM(c=s.lsd())&&(n.lazyContent=c.first)}},viewQuery:function(a,n){if(1&a&&s.GBs(s.C4Q,5),2&a){let p;s.mGM(p=s.lsd())&&(n.templateRef=p.first)}},inputs:{backdropClass:"backdropClass",ariaLabel:[0,"aria-label","ariaLabel"],ariaLabelledby:[0,"aria-labelledby","ariaLabelledby"],ariaDescribedby:[0,"aria-describedby","ariaDescribedby"],triggerEvent:"triggerEvent",enterDelay:"enterDelay",leaveDelay:"leaveDelay",position:"position",xOffset:"xOffset",yOffset:"yOffset",arrowWidth:"arrowWidth",arrowHeight:"arrowHeight",arrowOffsetX:"arrowOffsetX",arrowOffsetY:"arrowOffsetY",hideArrow:[2,"hideArrow","hideArrow",v.L39],closeOnPanelClick:[2,"closeOnPanelClick","closeOnPanelClick",v.L39],closeOnBackdropClick:[2,"closeOnBackdropClick","closeOnBackdropClick",v.L39],focusTrapEnabled:[2,"focusTrapEnabled","focusTrapEnabled",v.L39],focusTrapAutoCaptureEnabled:[2,"focusTrapAutoCaptureEnabled","focusTrapAutoCaptureEnabled",v.L39],hasBackdrop:[2,"hasBackdrop","hasBackdrop",v.L39],panelClass:[0,"class","panelClass"],classList:"classList"},outputs:{closed:"closed"},exportAs:["mtxPopover"],ngContentSelectors:ms,decls:1,vars:0,consts:[["tabindex","-1","role","dialog",1,"mtx-popover-panel",3,"keydown","click","mouseover","mouseleave","animationstart","animationend","animationcancel","id","cdkTrapFocus","cdkTrapFocusAutoCapture"],[1,"mtx-popover-content"],[1,"mtx-popover-direction-arrow",3,"style"],[1,"mtx-popover-direction-arrow"]],template:function(a,n){1&a&&(s.NAR(),s.DNE(0,vs,4,17,"ng-template"))},dependencies:[N.kB],styles:['@keyframes _mtx-popover-enter{0%{opacity:0;transform:scale(.8)}to{opacity:1;transform:none}}@keyframes _mtx-popover-exit{0%{opacity:1}to{opacity:0}}.mtx-popover-panel{position:relative;max-height:calc(100vh - 48px);padding:8px;font-size:inherit;outline:0;animation:_mtx-popover-enter .12s cubic-bezier(0,0,.2,1);border-radius:var(--mtx-popover-container-shape, var(--mat-sys-corner-extra-small));background-color:var(--mtx-popover-background-color, var(--mat-sys-surface-container));color:var(--mtx-popover-text-color, var(--mat-sys-on-surface))}.mtx-popover-panel.mtx-popover-panel-exit-animation{animation:_mtx-popover-exit .1s 25ms linear forwards}.mtx-popover-panel.mtx-popover-panel-animations-disabled{animation:none}.mtx-popover-panel.mtx-popover-panel-animating{pointer-events:none}.mtx-popover-panel[class*=mtx-popover-below]{margin-top:calc(.5em + 2px)}.mtx-popover-panel[class*=mtx-popover-above]{margin-bottom:calc(.5em + 2px)}.mtx-popover-panel[class*=mtx-popover-before]{margin-right:calc(.5em + 2px)}[dir=rtl] .mtx-popover-panel[class*=mtx-popover-before]{margin-right:auto;margin-left:calc(.5em + 2px)}.mtx-popover-panel[class*=mtx-popover-after]{margin-left:calc(.5em + 2px)}[dir=rtl] .mtx-popover-panel[class*=mtx-popover-after]{margin-left:auto;margin-right:calc(.5em + 2px)}.mtx-popover-panel.mtx-popover-panel-without-arrow{margin:0}.mtx-popover-direction-arrow{position:absolute}.mtx-popover-direction-arrow:before,.mtx-popover-direction-arrow:after{position:absolute;display:inline-block;content:"";border-width:.5em;border-style:solid}.mtx-popover-direction-arrow:before{border-color:var(--mtx-popover-outline-color, var(--mat-sys-surface-container))}.mtx-popover-direction-arrow:after{border-width:calc(.5em - 1px);border-color:var(--mtx-popover-background-color, var(--mat-sys-surface-container))}[class*=mtx-popover-below] .mtx-popover-direction-arrow,[class*=mtx-popover-above] .mtx-popover-direction-arrow{width:1em}[class*=mtx-popover-below] .mtx-popover-direction-arrow:before,[class*=mtx-popover-below] .mtx-popover-direction-arrow:after,[class*=mtx-popover-above] .mtx-popover-direction-arrow:before,[class*=mtx-popover-above] .mtx-popover-direction-arrow:after{border-left-color:transparent;border-right-color:transparent}[class*=mtx-popover-below] .mtx-popover-direction-arrow:after,[class*=mtx-popover-above] .mtx-popover-direction-arrow:after{left:1px}[dir=rtl] [class*=mtx-popover-below] .mtx-popover-direction-arrow:after,[dir=rtl] [class*=mtx-popover-above] .mtx-popover-direction-arrow:after{right:1px;left:auto}[class*=mtx-popover-below] .mtx-popover-direction-arrow{top:0}[class*=mtx-popover-below] .mtx-popover-direction-arrow:before,[class*=mtx-popover-below] .mtx-popover-direction-arrow:after{bottom:0;border-top-width:0}[class*=mtx-popover-above] .mtx-popover-direction-arrow{bottom:0}[class*=mtx-popover-above] .mtx-popover-direction-arrow:before,[class*=mtx-popover-above] .mtx-popover-direction-arrow:after{top:0;border-bottom-width:0}[class*=mtx-popover-before] .mtx-popover-direction-arrow,[class*=mtx-popover-after] .mtx-popover-direction-arrow{height:1em}[class*=mtx-popover-before] .mtx-popover-direction-arrow:before,[class*=mtx-popover-before] .mtx-popover-direction-arrow:after,[class*=mtx-popover-after] .mtx-popover-direction-arrow:before,[class*=mtx-popover-after] .mtx-popover-direction-arrow:after{border-top-color:transparent;border-bottom-color:transparent}[class*=mtx-popover-before] .mtx-popover-direction-arrow:after,[class*=mtx-popover-after] .mtx-popover-direction-arrow:after{top:1px}[class*=mtx-popover-before] .mtx-popover-direction-arrow{right:0}[class*=mtx-popover-before] .mtx-popover-direction-arrow:before,[class*=mtx-popover-before] .mtx-popover-direction-arrow:after{left:0;border-right-width:0}[dir=rtl] [class*=mtx-popover-before] .mtx-popover-direction-arrow{right:auto;left:0}[dir=rtl] [class*=mtx-popover-before] .mtx-popover-direction-arrow:before,[dir=rtl] [class*=mtx-popover-before] .mtx-popover-direction-arrow:after{left:auto;right:0;border-left-width:0}[dir=rtl] [class*=mtx-popover-before] .mtx-popover-direction-arrow:before{border-right-width:.5em}[dir=rtl] [class*=mtx-popover-before] .mtx-popover-direction-arrow:after{border-right-width:calc(.5em - 1px)}[class*=mtx-popover-after] .mtx-popover-direction-arrow{left:0}[class*=mtx-popover-after] .mtx-popover-direction-arrow:before,[class*=mtx-popover-after] .mtx-popover-direction-arrow:after{right:0;border-left-width:0}[dir=rtl] [class*=mtx-popover-after] .mtx-popover-direction-arrow{left:auto;right:0}[dir=rtl] [class*=mtx-popover-after] .mtx-popover-direction-arrow:before,[dir=rtl] [class*=mtx-popover-after] .mtx-popover-direction-arrow:after{right:auto;left:0;border-right-width:0}[dir=rtl] [class*=mtx-popover-after] .mtx-popover-direction-arrow:before{border-left-width:.5em}[dir=rtl] [class*=mtx-popover-after] .mtx-popover-direction-arrow:after{border-left-width:calc(.5em - 1px)}\n'],encapsulation:2,changeDetection:0}))}return l(),o})();const U=new r.nKC("mtx-popover-scroll-strategy",{providedIn:"root",factory:()=>{const l=(0,r.WQX)(P.hJ);return()=>l.scrollStrategies.reposition()}}),bs={provide:U,deps:[P.hJ],useFactory:function xs(l){return()=>l.scrollStrategies.reposition()}};let D=(()=>{var l;class o{constructor(){this._overlay=(0,r.WQX)(P.hJ),this._elementRef=(0,r.WQX)(s.aKT),this._viewContainerRef=(0,r.WQX)(s.c1b),this._dir=(0,r.WQX)(as.dS,{optional:!0}),this._changeDetectorRef=(0,r.WQX)(v.gRc),this._focusMonitor=(0,r.WQX)(ss.FN),this._overlayRef=null,this._popoverOpen=!1,this._halt=!1,this._positionSubscription=C.yU.EMPTY,this._popoverCloseSubscription=C.yU.EMPTY,this._closingActionsSubscription=C.yU.EMPTY,this._scrollStrategy=(0,r.WQX)(U),this._openedBy=void 0,this.popoverOpened=new s.bkB,this.popoverClosed=new s.bkB}get popover(){return this._popover}set popover(t){t!==this._popover&&(this._popover=t,this._popoverCloseSubscription.unsubscribe(),t&&(this._popoverCloseSubscription=t.closed.subscribe(a=>{this._destroyPopover(a)})))}ngAfterContentInit(){this._checkPopover(),this._setCurrentConfig()}ngOnDestroy(){this._halt=!0,this._positionSubscription.unsubscribe(),this._pendingRemoval?.unsubscribe(),this._popoverCloseSubscription.unsubscribe(),this._closingActionsSubscription.unsubscribe(),this._overlayRef&&(this._overlayRef.dispose(),this._overlayRef=null)}_setCurrentConfig(){this.triggerEvent&&(this.popover.triggerEvent=this.triggerEvent),this.popover.setCurrentStyles()}get popoverOpen(){return this._popoverOpen}get dir(){return this._dir&&"rtl"===this._dir.value?"rtl":"ltr"}_handleClick(t){"click"===this.popover.triggerEvent&&this.togglePopover()}_handleMouseEnter(t){this._halt=!1,"hover"===this.popover.triggerEvent&&(this._mouseoverTimer=setTimeout(()=>{this.openPopover()},this.popover.enterDelay))}_handleMouseLeave(t){"hover"===this.popover.triggerEvent&&(this._mouseoverTimer&&(clearTimeout(this._mouseoverTimer),this._mouseoverTimer=null),this._popoverOpen?setTimeout(()=>{this.popover.closeDisabled||this.closePopover()},this.popover.leaveDelay):this._halt=!0)}_handleMousedown(t){(0,ts._)(t)||(this._openedBy=0===t.button?"mouse":void 0)}_handleKeydown(t){const a=t.keyCode;(a===O.Fm||a===O.t6)&&(this._openedBy="keyboard")}togglePopover(){return this._popoverOpen?this.closePopover():this.openPopover()}openPopover(){if(this._popoverOpen||this._halt)return;this._checkPopover(),this._pendingRemoval?.unsubscribe();const t=this._createOverlay(),a=t.getConfig();this._setPosition(a.positionStrategy),"click"===this.popover.triggerEvent&&(a.hasBackdrop=this.popover.hasBackdrop??!0),t.attach(this._getPortal()),this.popover.lazyContent&&this.popover.lazyContent.attach(this.popoverData),this._closingActionsSubscription=this._popoverClosingActions().subscribe(()=>this.closePopover()),this._initPopover(),this.popover instanceof M&&this.popover._setIsOpen(!0)}closePopover(){this.popover.closed.emit()}focus(t,a){this._focusMonitor&&t?this._focusMonitor.focusVia(this._elementRef,t,a):this._elementRef.nativeElement.focus(a)}_destroyPopover(t){const a=this._overlayRef;if(!a||!this.popoverOpen)return;this._mouseoverTimer&&(clearTimeout(this._mouseoverTimer),this._mouseoverTimer=null);const n=this.popover;this._closingActionsSubscription.unsubscribe(),this._pendingRemoval?.unsubscribe(),a.detach(),n instanceof M?this._pendingRemoval=n._animationDone.pipe((0,os.p)(p=>"void"===p),(0,ls.s)(1)).subscribe(()=>{n.lazyContent?.detach()}):n.lazyContent?.detach(),this._openedBy=void 0,this._setIsPopoverOpen(!1)}_initPopover(){this.popover.direction=this.dir,this.popover.setElevation(),this._setIsPopoverOpen(!0)}_setIsPopoverOpen(t){t!==this._popoverOpen&&(this._popoverOpen=t,this._popoverOpen?this.popoverOpened.emit():this.popoverClosed.emit(),this._changeDetectorRef.markForCheck())}_checkPopover(){this.popover||function cs(){throw Error('mtx-popover-trigger: must pass in an mtx-popover instance.\n\n    Example:\n      <mtx-popover #popover="mtxPopover"></mtx-popover>\n      <button [mtxPopoverTriggerFor]="popover"></button>')}()}_createOverlay(){if(this._overlayRef)this._overlayRef.getConfig().positionStrategy.setOrigin(this._getTargetElement());else{const t=this._getOverlayConfig();this._subscribeToPositions(t.positionStrategy),this._overlayRef=this._overlay.create(t)}return this._overlayRef}_getOverlayConfig(){return new P.rR({positionStrategy:this._overlay.position().flexibleConnectedTo(this._getTargetElement()).withLockedPosition().withGrowAfterOpen().withTransformOriginOn(".mtx-popover-panel"),backdropClass:this.popover.backdropClass||"cdk-overlay-transparent-backdrop",panelClass:this.popover.overlayPanelClass,scrollStrategy:this._scrollStrategy(),direction:this._dir||void 0})}_getTargetElement(){return this.targetElement?this.targetElement.elementRef:this._elementRef}_subscribeToPositions(t){this._positionSubscription=t.positionChanges.subscribe(a=>{const n="start"===a.connectionPair.overlayX?"after":"end"===a.connectionPair.overlayX?"before":"center",p="top"===a.connectionPair.overlayY?"below":"bottom"===a.connectionPair.overlayY?"above":"center",c="above"===this.popover.position[0]||"below"===this.popover.position[0]?[p,n]:[n,p];this._changeDetectorRef.markForCheck(),this.popover.setCurrentStyles(c),this.popover.setPositionClasses(c)})}_setPosition(t){const[a,n,p]="before"===this.popover.position[0]||"after"===this.popover.position[1]?["start","center","end"]:"after"===this.popover.position[0]||"before"===this.popover.position[1]?["end","center","start"]:["center","start","end"],[c,h,w]="above"===this.popover.position[0]||"below"===this.popover.position[1]?["top","center","bottom"]:"below"===this.popover.position[0]||"above"===this.popover.position[1]?["bottom","center","top"]:["center","top","bottom"],[f,F]="below"===this.popover.position[0]||"above"===this.popover.position[0]?[a,a]:"before"===this.popover.position[0]?["end","start"]:["start","end"],[j,R]="before"===this.popover.position[0]||"after"===this.popover.position[0]?[c,c]:"below"===this.popover.position[0]?["top","bottom"]:["bottom","top"],S=f,B=j,x=this.popover.xOffset&&!isNaN(Number(this.popover.xOffset))?Number("ltr"===this.dir?this.popover.xOffset:-this.popover.xOffset):0,b=this.popover.yOffset&&!isNaN(Number(this.popover.yOffset))?Number(this.popover.yOffset):0;let X=[{originX:a,originY:c,overlayX:f,overlayY:j}];("above"===this.popover.position[0]||"below"===this.popover.position[0])&&(X=[{originX:a,originY:c,overlayX:f,overlayY:j,offsetY:b},{originX:n,originY:c,overlayX:n,overlayY:j,offsetY:b},{originX:p,originY:c,overlayX:p,overlayY:j,offsetY:b},{originX:a,originY:B,overlayX:f,overlayY:R,offsetY:-b},{originX:n,originY:B,overlayX:n,overlayY:R,offsetY:-b},{originX:p,originY:B,overlayX:p,overlayY:R,offsetY:-b}]),("before"===this.popover.position[0]||"after"===this.popover.position[0])&&(X=[{originX:a,originY:c,overlayX:f,overlayY:j,offsetX:x},{originX:a,originY:h,overlayX:f,overlayY:h,offsetX:x},{originX:a,originY:w,overlayX:f,overlayY:w,offsetX:x},{originX:S,originY:c,overlayX:F,overlayY:j,offsetX:-x},{originX:S,originY:h,overlayX:F,overlayY:h,offsetX:-x},{originX:S,originY:w,overlayX:F,overlayY:w,offsetX:-x}]),t.withPositions(X).withDefaultOffsetX(x).withDefaultOffsetY(b)}_popoverClosingActions(){const t="click"===this.popover.triggerEvent&&!0===this.popover.closeOnBackdropClick?this._overlayRef.backdropClick():(0,ns.of)(),a=this._overlayRef.detachments();return(0,es.h)(t,a)}_getPortal(){return(!this._portal||this._portal.templateRef!==this.popover.templateRef)&&(this._portal=new T.VA(this.popover.templateRef,this._viewContainerRef)),this._portal}static#s=l=()=>(this.\u0275fac=function(a){return new(a||o)},this.\u0275dir=s.FsC({type:o,selectors:[["","mtx-popover-trigger-for",""],["","mtxPopoverTriggerFor",""]],hostAttrs:["aria-haspopup","true"],hostVars:2,hostBindings:function(a,n){1&a&&s.bIt("click",function(c){return n._handleClick(c)})("mouseenter",function(c){return n._handleMouseEnter(c)})("mouseleave",function(c){return n._handleMouseLeave(c)})("mousedown",function(c){return n._handleMousedown(c)})("keydown",function(c){return n._handleKeydown(c)}),2&a&&s.BMQ("aria-expanded",n.popoverOpen)("aria-controls",n.popoverOpen?n.popover.panelId:null)},inputs:{popover:[0,"mtxPopoverTriggerFor","popover"],popoverData:[0,"mtxPopoverTriggerData","popoverData"],targetElement:[0,"mtxPopoverTargetAt","targetElement"],triggerEvent:[0,"mtxPopoverTriggerOn","triggerEvent"]},outputs:{popoverOpened:"popoverOpened",popoverClosed:"popoverClosed"},exportAs:["mtxPopoverTrigger"]}))}return l(),o})(),A=(()=>{var l;class o{static#s=l=()=>(this.\u0275fac=function(a){return new(a||o)},this.\u0275mod=s.$C({type:o}),this.\u0275inj=r.G2t({providers:[bs],imports:[g.MD,P.z_,N.Pd]}))}return l(),o})();var G=e(64727),_s=e(60407);const ys=(l,o)=>[l,o];function Ps(l,o){if(1&l&&(s.j41(0,"mat-option",6),s.EFF(1),s.k0s()),2&l){const i=o.$implicit;s.Y8G("value",i),s.R7$(),s.JRh(i)}}function Ms(l,o){if(1&l&&(s.j41(0,"mat-option",6),s.EFF(1),s.k0s()),2&l){const i=o.$implicit;s.Y8G("value",i),s.R7$(),s.JRh(i)}}function ks(l,o){if(1&l){const i=s.RV6();s.j41(0,"section")(1,"mat-form-field")(2,"mat-label"),s.EFF(3,"EnterDelay"),s.k0s(),s.j41(4,"input",7),s.mxI("ngModelChange",function(a){r.eBV(i);const n=s.XpG();return s.DH7(n.enterDelay,a)||(n.enterDelay=a),r.Njj(a)}),s.k0s()(),s.j41(5,"mat-form-field")(6,"mat-label"),s.EFF(7,"LeaveDelay"),s.k0s(),s.j41(8,"input",7),s.mxI("ngModelChange",function(a){r.eBV(i);const n=s.XpG();return s.DH7(n.leaveDelay,a)||(n.leaveDelay=a),r.Njj(a)}),s.k0s()()()}if(2&l){const i=s.XpG();s.R7$(4),s.R50("ngModel",i.enterDelay),s.R7$(4),s.R50("ngModel",i.leaveDelay)}}function ws(l,o){if(1&l){const i=s.RV6();s.j41(0,"section")(1,"mat-checkbox",5),s.mxI("ngModelChange",function(a){r.eBV(i);const n=s.XpG();return s.DH7(n.hasBackdrop,a)||(n.hasBackdrop=a),r.Njj(a)}),s.EFF(2,"HasBackdrop"),s.k0s()()}if(2&l){const i=s.XpG();s.R7$(),s.R50("ngModel",i.hasBackdrop)}}function Os(l,o){if(1&l&&(s.j41(0,"button",10,1),s.EFF(2," Show Popover With Hover "),s.k0s()),2&l){s.XpG();const i=s.sdS(50);s.Y8G("mtxPopoverTriggerFor",i)}}function Ts(l,o){if(1&l&&(s.j41(0,"button",11,2),s.EFF(2," Show Popover With Click "),s.k0s()),2&l){s.XpG();const i=s.sdS(50);s.Y8G("mtxPopoverTriggerFor",i)}}const Cs={title:"Configurable popover",component:(()=>{var l;class o{constructor(){this.triggerEvent="hover",this.enterDelay=100,this.leaveDelay=100,this.xOffset=0,this.yOffset=0,this.closeOnPanelClick=!1,this.hasBackdrop=!0,this.hideArrow=!1,this.positionXOptions=["before","after"],this.positionYOptions=["above","below"],this.positionStartOptions=[...this.positionYOptions,...this.positionXOptions],this.positionEndOptions=[],this.positionStart="below",this.positionEnd="after"}onPositionStartChange(t){this.positionXOptions.includes(this.positionStart)&&(this.positionEnd="below",this.positionEndOptions=[...this.positionYOptions,"center"]),this.positionYOptions.includes(this.positionStart)&&(this.positionEnd="after",this.positionEndOptions=[...this.positionXOptions,"center"])}ngOnInit(){this.onPositionStartChange()}static#s=l=()=>(this.\u0275fac=function(a){return new(a||o)},this.\u0275cmp=s.VBU({type:o,selectors:[["popover-configurable-example"]],decls:53,vars:23,consts:[["popover","mtxPopover"],["popoverTrigger","mtxPopoverTrigger"],["popoverTrigger2","mtxPopoverTrigger"],[1,"popover-position"],["for",""],[3,"ngModelChange","ngModel"],[3,"value"],["matInput","","type","number",3,"ngModelChange","ngModel"],["value","hover"],["value","click"],["cdkDrag","","mat-raised-button","","color","primary","mtxPopoverTriggerOn","hover",3,"mtxPopoverTriggerFor"],["cdkDrag","","mat-raised-button","","color","primary","mtxPopoverTriggerOn","click",3,"mtxPopoverTriggerFor"],[3,"enterDelay","leaveDelay","position","xOffset","yOffset","closeOnPanelClick","closeOnBackdropClick","hasBackdrop","hideArrow"],[2,"max-width","300px"]],template:function(a,n){if(1&a){const p=s.RV6();s.j41(0,"h2"),s.EFF(1,"Popover configuration"),s.k0s(),s.j41(2,"section",3)(3,"label",4),s.EFF(4,"Position:"),s.k0s(),s.EFF(5," [ "),s.j41(6,"mat-form-field")(7,"mat-label"),s.EFF(8,"Start"),s.k0s(),s.j41(9,"mat-select",5),s.mxI("ngModelChange",function(h){return r.eBV(p),s.DH7(n.positionStart,h)||(n.positionStart=h),r.Njj(h)}),s.bIt("ngModelChange",function(){return r.eBV(p),r.Njj(n.onPositionStartChange())}),s.Z7z(10,Ps,2,2,"mat-option",6,s.fX1),s.k0s()(),s.EFF(12," , "),s.j41(13,"mat-form-field")(14,"mat-label"),s.EFF(15,"End"),s.k0s(),s.j41(16,"mat-select",5),s.mxI("ngModelChange",function(h){return r.eBV(p),s.DH7(n.positionEnd,h)||(n.positionEnd=h),r.Njj(h)}),s.Z7z(17,Ms,2,2,"mat-option",6,s.fX1),s.k0s()(),s.EFF(19," ]\n"),s.k0s(),s.j41(20,"section")(21,"mat-form-field")(22,"mat-label"),s.EFF(23,"XOffset"),s.k0s(),s.j41(24,"input",7),s.mxI("ngModelChange",function(h){return r.eBV(p),s.DH7(n.xOffset,h)||(n.xOffset=h),r.Njj(h)}),s.k0s()(),s.j41(25,"mat-form-field")(26,"mat-label"),s.EFF(27,"YOffset"),s.k0s(),s.j41(28,"input",7),s.mxI("ngModelChange",function(h){return r.eBV(p),s.DH7(n.yOffset,h)||(n.yOffset=h),r.Njj(h)}),s.k0s()()(),s.j41(29,"section")(30,"label",4),s.EFF(31,"TriggerEvent:"),s.k0s(),s.j41(32,"mat-radio-group",5),s.mxI("ngModelChange",function(h){return r.eBV(p),s.DH7(n.triggerEvent,h)||(n.triggerEvent=h),r.Njj(h)}),s.j41(33,"mat-radio-button",8),s.EFF(34,"Hover"),s.k0s(),s.j41(35,"mat-radio-button",9),s.EFF(36,"Click"),s.k0s()()(),s.nVh(37,ks,9,2,"section"),s.j41(38,"section")(39,"mat-checkbox",5),s.mxI("ngModelChange",function(h){return r.eBV(p),s.DH7(n.closeOnPanelClick,h)||(n.closeOnPanelClick=h),r.Njj(h)}),s.EFF(40,"CloseOnPanelClick"),s.k0s()(),s.nVh(41,ws,3,1,"section"),s.j41(42,"section")(43,"mat-checkbox",5),s.mxI("ngModelChange",function(h){return r.eBV(p),s.DH7(n.hideArrow,h)||(n.hideArrow=h),r.Njj(h)}),s.EFF(44,"HideArrow"),s.k0s()(),s.j41(45,"h2"),s.EFF(46,"Result"),s.k0s(),s.nVh(47,Os,3,1,"button",10),s.nVh(48,Ts,3,1,"button",11),s.j41(49,"mtx-popover",12,0)(51,"div",13),s.EFF(52," A material design popover component created using Angular with the Angular CDK. "),s.k0s()()}2&a&&(s.R7$(9),s.R50("ngModel",n.positionStart),s.R7$(),s.Dyx(n.positionStartOptions),s.R7$(6),s.R50("ngModel",n.positionEnd),s.R7$(),s.Dyx(n.positionEndOptions),s.R7$(7),s.R50("ngModel",n.xOffset),s.R7$(4),s.R50("ngModel",n.yOffset),s.R7$(4),s.R50("ngModel",n.triggerEvent),s.R7$(5),s.vxM("hover"===n.triggerEvent?37:-1),s.R7$(2),s.R50("ngModel",n.closeOnPanelClick),s.R7$(2),s.vxM("click"===n.triggerEvent?41:-1),s.R7$(2),s.R50("ngModel",n.hideArrow),s.R7$(4),s.vxM("hover"===n.triggerEvent?47:-1),s.R7$(),s.vxM("click"===n.triggerEvent?48:-1),s.R7$(),s.Y8G("enterDelay",n.enterDelay)("leaveDelay",n.leaveDelay)("position",s.l_i(20,ys,n.positionStart,n.positionEnd))("xOffset",n.xOffset)("yOffset",n.yOffset)("closeOnPanelClick",n.closeOnPanelClick)("closeOnBackdropClick",!0)("hasBackdrop",n.hasBackdrop)("hideArrow",n.hideArrow))},dependencies:[u.YN,u.me,u.Q0,u.BC,u.vS,J.R,G.rl,G.nJ,q.fS,q.fg,V.Ve,V.VO,_s.wT,y.Wk,y.VT,y._g,L.g7,L.So,Z.Ez,_.Hl,_.$z,A,M,D,Y.T1],styles:[".mat-mdc-form-field[_ngcontent-%COMP%]{margin-right:1rem}.popover-position[_ngcontent-%COMP%]   .mat-mdc-form-field[_ngcontent-%COMP%]{width:120px;margin:0;font-size:14px}label[_ngcontent-%COMP%]{padding:0 8px}"]}))}return l(),o})(),files:[{file:"app.html",content:e(33681),filecontent:e(41812)},{file:"app.ts",content:e(35551),filecontent:e(9588)},{file:"app.scss",content:e(33121),filecontent:e(11511)}]},Es=()=>({name:"Sally"}),Ds=()=>({name:"Bob"});function As(l,o){if(1&l&&(s.j41(0,"div"),s.EFF(1," Lazy rendering with additional context data "),s.j41(2,"strong"),s.EFF(3),s.k0s(),s.EFF(4," . "),s.k0s()),2&l){const i=o.name;s.R7$(3),s.JRh(i)}}const Fs={title:"Popover lazy rendering",component:(()=>{var l;class o{static#s=l=()=>(this.\u0275fac=function(a){return new(a||o)},this.\u0275cmp=s.VBU({type:o,selectors:[["popover-lazy-rendering-example"]],decls:9,vars:6,consts:[["popover","mtxPopover"],["popoverTrigger","mtxPopoverTrigger"],["mtxPopoverContent",""],["mat-raised-button","","color","primary",3,"mtxPopoverTriggerFor","mtxPopoverTriggerData"]],template:function(a,n){if(1&a&&(s.j41(0,"mtx-popover",null,0),s.DNE(2,As,5,1,"ng-template",2),s.k0s(),s.j41(3,"button",3,1),s.EFF(5," Show Sally's Popover\n"),s.k0s(),s.j41(6,"button",3,1),s.EFF(8," Show Bob's Popover\n"),s.k0s()),2&a){const p=s.sdS(1);s.R7$(3),s.Y8G("mtxPopoverTriggerFor",p)("mtxPopoverTriggerData",s.lJ4(4,Es)),s.R7$(3),s.Y8G("mtxPopoverTriggerFor",p)("mtxPopoverTriggerData",s.lJ4(5,Ds))}},dependencies:[A,M,D,is,_.Hl,_.$z],styles:[".mat-mdc-button-base[_ngcontent-%COMP%]{margin:0 .5em}"]}))}return l(),o})(),files:[{file:"app.html",content:e(28579),filecontent:e(20014)},{file:"app.ts",content:e(17993),filecontent:e(32426)},{file:"app.scss",content:e(66319),filecontent:e(67089)}]};let Rs=(()=>{var l;class o{constructor(){this.elementRef=(0,r.WQX)(s.aKT)}static#s=l=()=>(this.\u0275fac=function(a){return new(a||o)},this.\u0275dir=s.FsC({type:o,selectors:[["mtx-popover-target"],["","mtxPopoverTarget",""]],exportAs:["mtxPopoverTarget"]}))}return l(),o})();const Ss={title:"Popover target",component:(()=>{var l;class o{static#s=l=()=>(this.\u0275fac=function(a){return new(a||o)},this.\u0275cmp=s.VBU({type:o,selectors:[["popover-target-example"]],decls:18,vars:5,consts:[["popoverTrigger","mtxPopoverTrigger"],["popover","mtxPopover"],["target1","mtxPopoverTarget"],["target2","mtxPopoverTarget"],[3,"ngModelChange","ngModel"],[3,"value"],["cdkDrag","","mat-raised-button","","color","primary",3,"mtxPopoverTriggerFor","mtxPopoverTargetAt"],[2,"max-width","300px"],["mtxPopoverTarget",""]],template:function(a,n){if(1&a){const p=s.RV6();s.j41(0,"mat-radio-group",4),s.mxI("ngModelChange",function(h){return r.eBV(p),s.DH7(n.target,h)||(n.target=h),r.Njj(h)}),s.j41(1,"mat-radio-button",5),s.EFF(2,"Target 1"),s.k0s(),s.j41(3,"mat-radio-button",5),s.EFF(4,"Target 2"),s.k0s()(),s.j41(5,"button",6,0),s.EFF(7," Show Popover\n"),s.k0s(),s.j41(8,"mtx-popover",null,1)(10,"div",7),s.EFF(11," A material design popover component created using Angular with the Angular CDK. "),s.k0s()(),s.j41(12,"div",8,2),s.EFF(14,"popover target directive"),s.k0s(),s.j41(15,"mtx-popover-target",null,3),s.EFF(17,"popover target component"),s.k0s()}if(2&a){const p=s.sdS(9),c=s.sdS(13),h=s.sdS(16);s.R50("ngModel",n.target),s.R7$(),s.Y8G("value",c),s.R7$(2),s.Y8G("value",h),s.R7$(2),s.Y8G("mtxPopoverTriggerFor",p)("mtxPopoverTargetAt",n.target)}},dependencies:[u.YN,u.BC,u.vS,y.Wk,y.VT,y._g,_.Hl,_.$z,A,M,D,Rs,Y.T1],styles:["[mtxPopoverTarget][_ngcontent-%COMP%], mtx-popover-target[_ngcontent-%COMP%]{display:flex;align-items:center;height:64px;padding:0 1em;margin-top:1em;background:#f5f5f5;color:#000000de;font:500 20px/32px Roboto,Helvetica Neue,sans-serif}.mat-toolbar[_ngcontent-%COMP%]{margin-top:1em}.mat-mdc-button-base[_ngcontent-%COMP%]{margin:0 .5em}"]}))}return l(),o})(),files:[{file:"app.html",content:e(95829),filecontent:e(4476)},{file:"app.ts",content:e(66263),filecontent:e(14572)},{file:"app.scss",content:e(37645),filecontent:e(67951)}]};function Bs(l,o){1&l&&s.nrm(0,"example-viewer",0),2&l&&s.Y8G("exampleData",o.$implicit)}function Xs(l,o){1&l&&s.Z7z(0,Bs,1,1,"example-viewer",0,s.fX1),2&l&&s.Dyx(o.examples)}function Is(l,o){1&l&&s.nrm(0,"doc-viewer",0),2&l&&s.Y8G("textContent",o.content.default)}let z=(()=>{var l;class o{constructor(){this.route=(0,r.WQX)(I.nX)}static#s=l=()=>(this.\u0275fac=function(a){return new(a||o)},this.\u0275cmp=s.VBU({type:o,selectors:[["app-popover-overview"]],decls:2,vars:3,consts:[[3,"exampleData"]],template:function(a,n){if(1&a&&(s.nVh(0,Xs,2,0),s.nI1(1,"async")),2&a){let p;s.vxM((p=s.bMT(1,1,n.route.data))?0:-1,p)}},dependencies:[$.v,g.Jj],encapsulation:2}))}return l(),o})(),K=(()=>{var l;class o{constructor(){this.route=(0,r.WQX)(I.nX)}static#s=l=()=>(this.\u0275fac=function(a){return new(a||o)},this.\u0275cmp=s.VBU({type:o,selectors:[["app-popover-api"]],decls:2,vars:3,consts:[[3,"textContent"]],template:function(a,n){if(1&a&&(s.nVh(0,Is,1,1,"doc-viewer",0),s.nI1(1,"async")),2&a){let p;s.vxM((p=s.bMT(1,1,n.route.data))?0:-1,p)}},dependencies:[Q.T,g.Jj],encapsulation:2}))}return l(),o})();const Ys=[{path:"",redirectTo:"overview",pathMatch:"full"},{path:"overview",component:z,pathMatch:"full",data:{examples:[Cs,Ss,Fs]}},{path:"api",component:K,pathMatch:"full",data:{content:e(28204)}},{path:"**",redirectTo:"overview"}]}}]);